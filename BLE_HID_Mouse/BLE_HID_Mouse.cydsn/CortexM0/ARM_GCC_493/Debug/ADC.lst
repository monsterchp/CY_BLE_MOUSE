ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,2,4
  24              		.comm	ADC_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 4
  29              	ADC_channelsConfig:
  30 0000 00040000 		.word	1024
  31              		.section	.text.ADC_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_Start, %function
  37              	ADC_Start:
  38              	.LFB2:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 2


  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  48              		.loc 1 66 0
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 3


  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_Init
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_Enable
  72:.\Generated_Source\PSoC4/ADC.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_initVar
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	ADC_Start, .-ADC_Start
  73              		.global	__aeabi_idiv
  74              		.section	.text.ADC_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_Init, %function
  80              	ADC_Init:
  81              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 4


  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 84B0     		sub	sp, sp, #16
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 5


 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  92              		.loc 1 172 0
  93 0006 0F20     		mov	r0, #15
  94 0008 0321     		mov	r1, #3
  95 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  96              		.loc 1 173 0
  97 000e 584B     		ldr	r3, .L17
  98 0010 0F20     		mov	r0, #15
  99 0012 191C     		mov	r1, r3
 100 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 101              		.loc 1 177 0
 102 0018 564B     		ldr	r3, .L17+4
 103 001a 0122     		mov	r2, #1
 104 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 105              		.loc 1 180 0
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 6


 106 001e 564B     		ldr	r3, .L17+8
 107 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 108              		.loc 1 178 0
 109 0022 002B     		cmp	r3, #0
 110 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 111              		.loc 1 178 0 is_stmt 0 discriminator 1
 112 0026 5549     		ldr	r1, .L17+12
 113 0028 00E0     		b	.L7
 114              	.L6:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0 discriminator 2
 116 002a 5549     		ldr	r1, .L17+16
 117              	.L7:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 discriminator 4
 119 002c 554B     		ldr	r3, .L17+20
 120 002e 554A     		ldr	r2, .L17+20
 121 0030 1268     		ldr	r2, [r2]
 122 0032 0A43     		orr	r2, r1
 123 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 124              		.loc 1 182 0 is_stmt 1 discriminator 4
 125 0036 544B     		ldr	r3, .L17+24
 126 0038 544A     		ldr	r2, .L17+28
 127 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 128              		.loc 1 183 0 discriminator 4
 129 003c 544B     		ldr	r3, .L17+32
 130 003e 554A     		ldr	r2, .L17+36
 131 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 132              		.loc 1 184 0 discriminator 4
 133 0042 554B     		ldr	r3, .L17+40
 134 0044 0022     		mov	r2, #0
 135 0046 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 136              		.loc 1 185 0 discriminator 4
 137 0048 544B     		ldr	r3, .L17+44
 138 004a 554A     		ldr	r2, .L17+48
 139 004c 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 140              		.loc 1 186 0 discriminator 4
 141 004e 554B     		ldr	r3, .L17+52
 142 0050 534A     		ldr	r2, .L17+48
 143 0052 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 144              		.loc 1 190 0 discriminator 4
 145 0054 544B     		ldr	r3, .L17+56
 146 0056 544A     		ldr	r2, .L17+56
 147 0058 1268     		ldr	r2, [r2]
 148 005a 8021     		mov	r1, #128
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 7


 149 005c 4902     		lsl	r1, r1, #9
 150 005e 0A43     		orr	r2, r1
 151 0060 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 152              		.loc 1 197 0 discriminator 4
 153 0062 524B     		ldr	r3, .L17+60
 154 0064 0022     		mov	r2, #0
 155 0066 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 156              		.loc 1 198 0 discriminator 4
 157 0068 514B     		ldr	r3, .L17+64
 158 006a 0022     		mov	r2, #0
 159 006c 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 160              		.loc 1 199 0 discriminator 4
 161 006e 514B     		ldr	r3, .L17+68
 162 0070 0122     		mov	r2, #1
 163 0072 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 164              		.loc 1 206 0 discriminator 4
 165 0074 504B     		ldr	r3, .L17+72
 166 0076 1B68     		ldr	r3, [r3]
 167 0078 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 168              		.loc 1 207 0 discriminator 4
 169 007a 7B68     		ldr	r3, [r7, #4]
 170 007c 4F4A     		ldr	r2, .L17+76
 171 007e 1340     		and	r3, r2
 172 0080 7B60     		str	r3, [r7, #4]
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 173              		.loc 1 220 0 discriminator 4
 174 0082 7B68     		ldr	r3, [r7, #4]
 175 0084 8022     		mov	r2, #128
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 8


 176 0086 9205     		lsl	r2, r2, #22
 177 0088 1343     		orr	r3, r2
 178 008a 7B60     		str	r3, [r7, #4]
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 179              		.loc 1 221 0 discriminator 4
 180 008c 7B68     		ldr	r3, [r7, #4]
 181 008e 0122     		mov	r2, #1
 182 0090 9343     		bic	r3, r2
 183 0092 7B60     		str	r3, [r7, #4]
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 184              		.loc 1 226 0 discriminator 4
 185 0094 484B     		ldr	r3, .L17+72
 186 0096 7A68     		ldr	r2, [r7, #4]
 187 0098 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 188              		.loc 1 232 0 discriminator 4
 189 009a 0023     		mov	r3, #0
 190 009c FB60     		str	r3, [r7, #12]
 191 009e 61E0     		b	.L8
 192              	.L16:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 193              		.loc 1 234 0
 194 00a0 8023     		mov	r3, #128
 195 00a2 DA00     		lsl	r2, r3, #3
 196 00a4 DC23     		mov	r3, #220
 197 00a6 9B01     		lsl	r3, r3, #6
 198 00a8 1340     		and	r3, r2
 199 00aa 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 9


 200              		.loc 1 253 0
 201 00ac FB68     		ldr	r3, [r7, #12]
 202 00ae 9B00     		lsl	r3, r3, #2
 203 00b0 434A     		ldr	r2, .L17+80
 204 00b2 9446     		mov	ip, r2
 205 00b4 6344     		add	r3, r3, ip
 206 00b6 7A68     		ldr	r2, [r7, #4]
 207 00b8 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 208              		.loc 1 255 0
 209 00ba 8023     		mov	r3, #128
 210 00bc DB00     		lsl	r3, r3, #3
 211 00be 0122     		mov	r2, #1
 212 00c0 1340     		and	r3, r2
 213 00c2 09D0     		beq	.L9
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 214              		.loc 1 257 0
 215 00c4 394B     		ldr	r3, .L17+60
 216 00c6 394A     		ldr	r2, .L17+60
 217 00c8 1268     		ldr	r2, [r2]
 218 00ca F968     		ldr	r1, [r7, #12]
 219 00cc 0120     		mov	r0, #1
 220 00ce 8840     		lsl	r0, r0, r1
 221 00d0 011C     		mov	r1, r0
 222 00d2 89B2     		uxth	r1, r1
 223 00d4 0A43     		orr	r2, r1
 224 00d6 1A60     		str	r2, [r3]
 225              	.L9:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 226              		.loc 1 260 0
 227 00d8 8023     		mov	r3, #128
 228 00da DB00     		lsl	r3, r3, #3
 229 00dc 0222     		mov	r2, #2
 230 00de 1340     		and	r3, r2
 231 00e0 09D0     		beq	.L10
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 232              		.loc 1 262 0
 233 00e2 334B     		ldr	r3, .L17+64
 234 00e4 324A     		ldr	r2, .L17+64
 235 00e6 1268     		ldr	r2, [r2]
 236 00e8 F968     		ldr	r1, [r7, #12]
 237 00ea 0120     		mov	r0, #1
 238 00ec 8840     		lsl	r0, r0, r1
 239 00ee 011C     		mov	r1, r0
 240 00f0 89B2     		uxth	r1, r1
 241 00f2 0A43     		orr	r2, r1
 242 00f4 1A60     		str	r2, [r3]
 243              	.L10:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 10


 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 244              		.loc 1 282 0
 245 00f6 8023     		mov	r3, #128
 246 00f8 DA00     		lsl	r2, r3, #3
 247 00fa 8023     		mov	r3, #128
 248 00fc 9B00     		lsl	r3, r3, #2
 249 00fe 1340     		and	r3, r2
 250 0100 03D0     		beq	.L11
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 251              		.loc 1 284 0
 252 0102 8023     		mov	r3, #128
 253 0104 5B00     		lsl	r3, r3, #1
 254 0106 BB60     		str	r3, [r7, #8]
 255 0108 02E0     		b	.L12
 256              	.L11:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 257              		.loc 1 288 0
 258 010a 8023     		mov	r3, #128
 259 010c 5B01     		lsl	r3, r3, #5
 260 010e BB60     		str	r3, [r7, #8]
 261              	.L12:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 262              		.loc 1 291 0
 263 0110 8023     		mov	r3, #128
 264 0112 DA00     		lsl	r2, r3, #3
 265 0114 8023     		mov	r3, #128
 266 0116 5B00     		lsl	r3, r3, #1
 267 0118 1340     		and	r3, r2
 268 011a 05D1     		bne	.L13
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 11


 269              		.loc 1 298 0
 270 011c 294B     		ldr	r3, .L17+84
 271 011e FA68     		ldr	r2, [r7, #12]
 272 0120 5200     		lsl	r2, r2, #1
 273 0122 0021     		mov	r1, #0
 274 0124 D152     		strh	r1, [r2, r3]
 275 0126 09E0     		b	.L14
 276              	.L13:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 277              		.loc 1 305 0
 278 0128 BB68     		ldr	r3, [r7, #8]
 279 012a 002B     		cmp	r3, #0
 280 012c 00DA     		bge	.L15
 281 012e 0133     		add	r3, r3, #1
 282              	.L15:
 283 0130 5B10     		asr	r3, r3, #1
 284 0132 99B2     		uxth	r1, r3
 285 0134 234B     		ldr	r3, .L17+84
 286 0136 FA68     		ldr	r2, [r7, #12]
 287 0138 5200     		lsl	r2, r2, #1
 288 013a D152     		strh	r1, [r2, r3]
 289              	.L14:
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 290              		.loc 1 311 0 discriminator 2
 291 013c BB68     		ldr	r3, [r7, #8]
 292 013e 224A     		ldr	r2, .L17+88
 293 0140 5343     		mul	r3, r2
 294 0142 224A     		ldr	r2, .L17+92
 295 0144 9446     		mov	ip, r2
 296 0146 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 297              		.loc 1 312 0 discriminator 2
 298 0148 181C     		mov	r0, r3
 299 014a 1F49     		ldr	r1, .L17+88
 300 014c FFF7FEFF 		bl	__aeabi_idiv
 301 0150 031C     		mov	r3, r0
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 302              		.loc 1 311 0 discriminator 2
 303 0152 9BB2     		uxth	r3, r3
 304 0154 19B2     		sxth	r1, r3
 305 0156 1E4B     		ldr	r3, .L17+96
 306 0158 FA68     		ldr	r2, [r7, #12]
 307 015a 9200     		lsl	r2, r2, #2
 308 015c D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 309              		.loc 1 232 0 discriminator 2
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 12


 310 015e FB68     		ldr	r3, [r7, #12]
 311 0160 0133     		add	r3, r3, #1
 312 0162 FB60     		str	r3, [r7, #12]
 313              	.L8:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 314              		.loc 1 232 0 is_stmt 0 discriminator 1
 315 0164 FB68     		ldr	r3, [r7, #12]
 316 0166 002B     		cmp	r3, #0
 317 0168 9AD0     		beq	.L16
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 318              		.loc 1 314 0 is_stmt 1
 319 016a BD46     		mov	sp, r7
 320 016c 04B0     		add	sp, sp, #16
 321              		@ sp needed
 322 016e 80BD     		pop	{r7, pc}
 323              	.L18:
 324              		.align	2
 325              	.L17:
 326 0170 00000000 		.word	ADC_ISR
 327 0174 20003A40 		.word	1077542944
 328 0178 80033A40 		.word	1077543808
 329 017c 70021053 		.word	1393558128
 330 0180 70020053 		.word	1392509552
 331 0184 00003A40 		.word	1077542912
 332 0188 04003A40 		.word	1077542916
 333 018c C4000A80 		.word	-2146828092
 334 0190 18003A40 		.word	1077542936
 335 0194 0000FF07 		.word	134152192
 336 0198 1C003A40 		.word	1077542940
 337 019c 10003A40 		.word	1077542928
 338 01a0 04000400 		.word	262148
 339 01a4 14003A40 		.word	1077542932
 340 01a8 00033A40 		.word	1077543680
 341 01ac 28023A40 		.word	1077543464
 342 01b0 38023A40 		.word	1077543480
 343 01b4 18023A40 		.word	1077543448
 344 01b8 30003A40 		.word	1077542960
 345 01bc FFFFFFDF 		.word	-536870913
 346 01c0 80003A40 		.word	1077543040
 347 01c4 00000000 		.word	ADC_offset
 348 01c8 10270000 		.word	10000
 349 01cc 88130000 		.word	5000
 350 01d0 00000000 		.word	ADC_countsPer10Volt
 351              		.cfi_endproc
 352              	.LFE3:
 353              		.size	ADC_Init, .-ADC_Init
 354              		.section	.text.ADC_Enable,"ax",%progbits
 355              		.align	2
 356              		.global	ADC_Enable
 357              		.code	16
 358              		.thumb_func
 359              		.type	ADC_Enable, %function
 360              	ADC_Enable:
 361              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 13


 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 362              		.loc 1 331 0
 363              		.cfi_startproc
 364 0000 80B5     		push	{r7, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 370              		.loc 1 332 0
 371 0004 0A4B     		ldr	r3, .L22
 372 0006 1B68     		ldr	r3, [r3]
 373 0008 002B     		cmp	r3, #0
 374 000a 0EDB     		blt	.L19
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 375              		.loc 1 336 0
 376 000c C046     		mov	r8, r8
 377              	.L21:
 378              		.loc 1 336 0 is_stmt 0 discriminator 1
 379 000e 094B     		ldr	r3, .L22+4
 380 0010 1B68     		ldr	r3, [r3]
 381 0012 002B     		cmp	r3, #0
 382 0014 FBDB     		blt	.L21
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 383              		.loc 1 342 0 is_stmt 1
 384 0016 064B     		ldr	r3, .L22
 385 0018 054A     		ldr	r2, .L22
 386 001a 1268     		ldr	r2, [r2]
 387 001c 8021     		mov	r1, #128
 388 001e 0906     		lsl	r1, r1, #24
 389 0020 0A43     		orr	r2, r1
 390 0022 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 14


 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 391              		.loc 1 345 0
 392 0024 0A20     		mov	r0, #10
 393 0026 FFF7FEFF 		bl	CyDelayUs
 394              	.L19:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 395              		.loc 1 347 0
 396 002a BD46     		mov	sp, r7
 397              		@ sp needed
 398 002c 80BD     		pop	{r7, pc}
 399              	.L23:
 400 002e C046     		.align	2
 401              	.L22:
 402 0030 00003A40 		.word	1077542912
 403 0034 08023A40 		.word	1077543432
 404              		.cfi_endproc
 405              	.LFE4:
 406              		.size	ADC_Enable, .-ADC_Enable
 407              		.section	.text.ADC_Stop,"ax",%progbits
 408              		.align	2
 409              		.global	ADC_Stop
 410              		.code	16
 411              		.thumb_func
 412              		.type	ADC_Stop, %function
 413              	ADC_Stop:
 414              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 415              		.loc 1 366 0
 416              		.cfi_startproc
 417 0000 80B5     		push	{r7, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 423              		.loc 1 367 0
 424 0004 034B     		ldr	r3, .L25
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 15


 425 0006 034A     		ldr	r2, .L25
 426 0008 1268     		ldr	r2, [r2]
 427 000a 5200     		lsl	r2, r2, #1
 428 000c 5208     		lsr	r2, r2, #1
 429 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 430              		.loc 1 368 0
 431 0010 BD46     		mov	sp, r7
 432              		@ sp needed
 433 0012 80BD     		pop	{r7, pc}
 434              	.L26:
 435              		.align	2
 436              	.L25:
 437 0014 00003A40 		.word	1077542912
 438              		.cfi_endproc
 439              	.LFE5:
 440              		.size	ADC_Stop, .-ADC_Stop
 441              		.section	.text.ADC_StartConvert,"ax",%progbits
 442              		.align	2
 443              		.global	ADC_StartConvert
 444              		.code	16
 445              		.thumb_func
 446              		.type	ADC_StartConvert, %function
 447              	ADC_StartConvert:
 448              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 449              		.loc 1 392 0
 450              		.cfi_startproc
 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
 456              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 16


 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 457              		.loc 1 396 0
 458 0004 024B     		ldr	r3, .L28
 459 0006 0122     		mov	r2, #1
 460 0008 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 461              		.loc 1 399 0
 462 000a BD46     		mov	sp, r7
 463              		@ sp needed
 464 000c 80BD     		pop	{r7, pc}
 465              	.L29:
 466 000e C046     		.align	2
 467              	.L28:
 468 0010 24003A40 		.word	1077542948
 469              		.cfi_endproc
 470              	.LFE6:
 471              		.size	ADC_StartConvert, .-ADC_StartConvert
 472              		.section	.text.ADC_StopConvert,"ax",%progbits
 473              		.align	2
 474              		.global	ADC_StopConvert
 475              		.code	16
 476              		.thumb_func
 477              		.type	ADC_StopConvert, %function
 478              	ADC_StopConvert:
 479              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 480              		.loc 1 417 0
 481              		.cfi_startproc
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 17


 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 488              		.loc 1 421 0
 489 0004 BD46     		mov	sp, r7
 490              		@ sp needed
 491 0006 80BD     		pop	{r7, pc}
 492              		.cfi_endproc
 493              	.LFE7:
 494              		.size	ADC_StopConvert, .-ADC_StopConvert
 495              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 496              		.align	2
 497              		.global	ADC_IsEndConversion
 498              		.code	16
 499              		.thumb_func
 500              		.type	ADC_IsEndConversion, %function
 501              	ADC_IsEndConversion:
 502              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 503              		.loc 1 451 0
 504              		.cfi_startproc
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 84B0     		sub	sp, sp, #16
 510              		.cfi_def_cfa_offset 24
 511 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 18


 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 514              		.loc 1 452 0
 515 0008 0023     		mov	r3, #0
 516 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 517              		.loc 1 454 0
 518 000c 7B68     		ldr	r3, [r7, #4]
 519 000e 0322     		mov	r2, #3
 520 0010 1340     		and	r3, r2
 521 0012 11D0     		beq	.L32
 522              	.L34:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 523              		.loc 1 458 0 discriminator 2
 524 0014 0B4B     		ldr	r3, .L36
 525 0016 1B68     		ldr	r3, [r3]
 526 0018 0122     		mov	r2, #1
 527 001a 1340     		and	r3, r2
 528 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 529              		.loc 1 459 0 discriminator 2
 530 001e FB68     		ldr	r3, [r7, #12]
 531 0020 002B     		cmp	r3, #0
 532 0022 03D1     		bne	.L33
 533              		.loc 1 459 0 is_stmt 0 discriminator 1
 534 0024 7B68     		ldr	r3, [r7, #4]
 535 0026 0222     		mov	r2, #2
 536 0028 1340     		and	r3, r2
 537 002a F3D1     		bne	.L34
 538              	.L33:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 539              		.loc 1 461 0 is_stmt 1
 540 002c FB68     		ldr	r3, [r7, #12]
 541 002e 002B     		cmp	r3, #0
 542 0030 02D0     		beq	.L32
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 543              		.loc 1 464 0
 544 0032 044B     		ldr	r3, .L36
 545 0034 0122     		mov	r2, #1
 546 0036 1A60     		str	r2, [r3]
 547              	.L32:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 19


 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 548              		.loc 1 485 0
 549 0038 FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/ADC.c **** }
 550              		.loc 1 486 0
 551 003a 181C     		mov	r0, r3
 552 003c BD46     		mov	sp, r7
 553 003e 04B0     		add	sp, sp, #16
 554              		@ sp needed
 555 0040 80BD     		pop	{r7, pc}
 556              	.L37:
 557 0042 C046     		.align	2
 558              	.L36:
 559 0044 10023A40 		.word	1077543440
 560              		.cfi_endproc
 561              	.LFE8:
 562              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 563              		.section	.text.ADC_GetResult16,"ax",%progbits
 564              		.align	2
 565              		.global	ADC_GetResult16
 566              		.code	16
 567              		.thumb_func
 568              		.type	ADC_GetResult16, %function
 569              	ADC_GetResult16:
 570              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 571              		.loc 1 505 0
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 20


 572              		.cfi_startproc
 573 0000 80B5     		push	{r7, lr}
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 84B0     		sub	sp, sp, #16
 578              		.cfi_def_cfa_offset 24
 579 0004 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 581 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 582              		.loc 1 509 0
 583 0008 7B68     		ldr	r3, [r7, #4]
 584 000a 002B     		cmp	r3, #0
 585 000c 02D0     		beq	.L39
 586              		.loc 1 509 0 is_stmt 0 discriminator 1
 587 000e 0020     		mov	r0, #0
 588 0010 FFF7FEFF 		bl	CyHalt
 589              	.L39:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 590              		.loc 1 511 0 is_stmt 1
 591 0014 7B68     		ldr	r3, [r7, #4]
 592 0016 002B     		cmp	r3, #0
 593 0018 09D1     		bne	.L40
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 594              		.loc 1 513 0
 595 001a 7B68     		ldr	r3, [r7, #4]
 596 001c 9B00     		lsl	r3, r3, #2
 597 001e 084A     		ldr	r2, .L43
 598 0020 9446     		mov	ip, r2
 599 0022 6344     		add	r3, r3, ip
 600 0024 1B68     		ldr	r3, [r3]
 601 0026 1B04     		lsl	r3, r3, #16
 602 0028 1B0C     		lsr	r3, r3, #16
 603 002a FB60     		str	r3, [r7, #12]
 604 002c 01E0     		b	.L41
 605              	.L40:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 606              		.loc 1 521 0
 607 002e 0023     		mov	r3, #0
 608 0030 FB60     		str	r3, [r7, #12]
 609              	.L41:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 21


 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 610              		.loc 1 525 0
 611 0032 FB68     		ldr	r3, [r7, #12]
 612 0034 9BB2     		uxth	r3, r3
 613 0036 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/ADC.c **** }
 614              		.loc 1 526 0
 615 0038 181C     		mov	r0, r3
 616 003a BD46     		mov	sp, r7
 617 003c 04B0     		add	sp, sp, #16
 618              		@ sp needed
 619 003e 80BD     		pop	{r7, pc}
 620              	.L44:
 621              		.align	2
 622              	.L43:
 623 0040 80013A40 		.word	1077543296
 624              		.cfi_endproc
 625              	.LFE9:
 626              		.size	ADC_GetResult16, .-ADC_GetResult16
 627              		.section	.text.ADC_SetChanMask,"ax",%progbits
 628              		.align	2
 629              		.global	ADC_SetChanMask
 630              		.code	16
 631              		.thumb_func
 632              		.type	ADC_SetChanMask, %function
 633              	ADC_SetChanMask:
 634              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 635              		.loc 1 550 0
 636              		.cfi_startproc
 637 0000 80B5     		push	{r7, lr}
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 7, -8
 640              		.cfi_offset 14, -4
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 22


 641 0002 82B0     		sub	sp, sp, #8
 642              		.cfi_def_cfa_offset 16
 643 0004 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 645 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 646              		.loc 1 551 0
 647 0008 034B     		ldr	r3, .L46
 648 000a 7A68     		ldr	r2, [r7, #4]
 649 000c 0121     		mov	r1, #1
 650 000e 0A40     		and	r2, r1
 651 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 652              		.loc 1 552 0
 653 0012 BD46     		mov	sp, r7
 654 0014 02B0     		add	sp, sp, #8
 655              		@ sp needed
 656 0016 80BD     		pop	{r7, pc}
 657              	.L47:
 658              		.align	2
 659              	.L46:
 660 0018 20003A40 		.word	1077542944
 661              		.cfi_endproc
 662              	.LFE10:
 663              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 664              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 665              		.align	2
 666              		.global	ADC_SetLowLimit
 667              		.code	16
 668              		.thumb_func
 669              		.type	ADC_SetLowLimit, %function
 670              	ADC_SetLowLimit:
 671              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 23


 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 672              		.loc 1 594 0
 673              		.cfi_startproc
 674 0000 80B5     		push	{r7, lr}
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 82B0     		sub	sp, sp, #8
 679              		.cfi_def_cfa_offset 16
 680 0004 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 682 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 683              		.loc 1 595 0
 684 0008 084B     		ldr	r3, .L49
 685 000a 084A     		ldr	r2, .L49
 686 000c 1268     		ldr	r2, [r2]
 687 000e 120C     		lsr	r2, r2, #16
 688 0010 1204     		lsl	r2, r2, #16
 689 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 690              		.loc 1 596 0
 691 0014 054B     		ldr	r3, .L49
 692 0016 054A     		ldr	r2, .L49
 693 0018 1168     		ldr	r1, [r2]
 694 001a 7A68     		ldr	r2, [r7, #4]
 695 001c 1204     		lsl	r2, r2, #16
 696 001e 120C     		lsr	r2, r2, #16
 697 0020 0A43     		orr	r2, r1
 698 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 699              		.loc 1 597 0
 700 0024 BD46     		mov	sp, r7
 701 0026 02B0     		add	sp, sp, #8
 702              		@ sp needed
 703 0028 80BD     		pop	{r7, pc}
 704              	.L50:
 705 002a C046     		.align	2
 706              	.L49:
 707 002c 18003A40 		.word	1077542936
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 24


 708              		.cfi_endproc
 709              	.LFE11:
 710              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 711              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 712              		.align	2
 713              		.global	ADC_SetHighLimit
 714              		.code	16
 715              		.thumb_func
 716              		.type	ADC_SetHighLimit, %function
 717              	ADC_SetHighLimit:
 718              	.LFB12:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 719              		.loc 1 615 0
 720              		.cfi_startproc
 721 0000 80B5     		push	{r7, lr}
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 82B0     		sub	sp, sp, #8
 726              		.cfi_def_cfa_offset 16
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 729 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 730              		.loc 1 616 0
 731 0008 074B     		ldr	r3, .L52
 732 000a 074A     		ldr	r2, .L52
 733 000c 1268     		ldr	r2, [r2]
 734 000e 1204     		lsl	r2, r2, #16
 735 0010 120C     		lsr	r2, r2, #16
 736 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 737              		.loc 1 617 0
 738 0014 044B     		ldr	r3, .L52
 739 0016 044A     		ldr	r2, .L52
 740 0018 1168     		ldr	r1, [r2]
 741 001a 7A68     		ldr	r2, [r7, #4]
 742 001c 1204     		lsl	r2, r2, #16
 743 001e 0A43     		orr	r2, r1
 744 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 25


 618:.\Generated_Source\PSoC4/ADC.c **** }
 745              		.loc 1 618 0
 746 0022 BD46     		mov	sp, r7
 747 0024 02B0     		add	sp, sp, #8
 748              		@ sp needed
 749 0026 80BD     		pop	{r7, pc}
 750              	.L53:
 751              		.align	2
 752              	.L52:
 753 0028 18003A40 		.word	1077542936
 754              		.cfi_endproc
 755              	.LFE12:
 756              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 757              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 758              		.align	2
 759              		.global	ADC_SetLimitMask
 760              		.code	16
 761              		.thumb_func
 762              		.type	ADC_SetLimitMask, %function
 763              	ADC_SetLimitMask:
 764              	.LFB13:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 765              		.loc 1 639 0
 766              		.cfi_startproc
 767 0000 80B5     		push	{r7, lr}
 768              		.cfi_def_cfa_offset 8
 769              		.cfi_offset 7, -8
 770              		.cfi_offset 14, -4
 771 0002 82B0     		sub	sp, sp, #8
 772              		.cfi_def_cfa_offset 16
 773 0004 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 775 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 776              		.loc 1 640 0
 777 0008 034B     		ldr	r3, .L55
 778 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 26


 779 000c 0121     		mov	r1, #1
 780 000e 0A40     		and	r2, r1
 781 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 782              		.loc 1 641 0
 783 0012 BD46     		mov	sp, r7
 784 0014 02B0     		add	sp, sp, #8
 785              		@ sp needed
 786 0016 80BD     		pop	{r7, pc}
 787              	.L56:
 788              		.align	2
 789              	.L55:
 790 0018 38023A40 		.word	1077543480
 791              		.cfi_endproc
 792              	.LFE13:
 793              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 794              		.section	.text.ADC_SetSatMask,"ax",%progbits
 795              		.align	2
 796              		.global	ADC_SetSatMask
 797              		.code	16
 798              		.thumb_func
 799              		.type	ADC_SetSatMask, %function
 800              	ADC_SetSatMask:
 801              	.LFB14:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 802              		.loc 1 662 0
 803              		.cfi_startproc
 804 0000 80B5     		push	{r7, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 82B0     		sub	sp, sp, #8
 809              		.cfi_def_cfa_offset 16
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 812 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 27


 813              		.loc 1 663 0
 814 0008 034B     		ldr	r3, .L58
 815 000a 7A68     		ldr	r2, [r7, #4]
 816 000c 0121     		mov	r1, #1
 817 000e 0A40     		and	r2, r1
 818 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 819              		.loc 1 664 0
 820 0012 BD46     		mov	sp, r7
 821 0014 02B0     		add	sp, sp, #8
 822              		@ sp needed
 823 0016 80BD     		pop	{r7, pc}
 824              	.L59:
 825              		.align	2
 826              	.L58:
 827 0018 28023A40 		.word	1077543464
 828              		.cfi_endproc
 829              	.LFE14:
 830              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 831              		.section	.text.ADC_SetOffset,"ax",%progbits
 832              		.align	2
 833              		.global	ADC_SetOffset
 834              		.code	16
 835              		.thumb_func
 836              		.type	ADC_SetOffset, %function
 837              	ADC_SetOffset:
 838              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 839              		.loc 1 690 0
 840              		.cfi_startproc
 841 0000 80B5     		push	{r7, lr}
 842              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 28


 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 82B0     		sub	sp, sp, #8
 846              		.cfi_def_cfa_offset 16
 847 0004 00AF     		add	r7, sp, #0
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 850 0008 0A1C     		mov	r2, r1
 851 000a BB1C     		add	r3, r7, #2
 852 000c 1A80     		strh	r2, [r3]
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 853              		.loc 1 692 0
 854 000e 7B68     		ldr	r3, [r7, #4]
 855 0010 002B     		cmp	r3, #0
 856 0012 02D0     		beq	.L61
 857              		.loc 1 692 0 is_stmt 0 discriminator 1
 858 0014 0020     		mov	r0, #0
 859 0016 FFF7FEFF 		bl	CyHalt
 860              	.L61:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 861              		.loc 1 694 0 is_stmt 1
 862 001a 044B     		ldr	r3, .L62
 863 001c 7A68     		ldr	r2, [r7, #4]
 864 001e 5200     		lsl	r2, r2, #1
 865 0020 B91C     		add	r1, r7, #2
 866 0022 0988     		ldrh	r1, [r1]
 867 0024 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 868              		.loc 1 695 0
 869 0026 BD46     		mov	sp, r7
 870 0028 02B0     		add	sp, sp, #8
 871              		@ sp needed
 872 002a 80BD     		pop	{r7, pc}
 873              	.L63:
 874              		.align	2
 875              	.L62:
 876 002c 00000000 		.word	ADC_offset
 877              		.cfi_endproc
 878              	.LFE15:
 879              		.size	ADC_SetOffset, .-ADC_SetOffset
 880              		.section	.text.ADC_SetGain,"ax",%progbits
 881              		.align	2
 882              		.global	ADC_SetGain
 883              		.code	16
 884              		.thumb_func
 885              		.type	ADC_SetGain, %function
 886              	ADC_SetGain:
 887              	.LFB16:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 29


 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 888              		.loc 1 724 0
 889              		.cfi_startproc
 890 0000 80B5     		push	{r7, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 16
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 899 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 900              		.loc 1 726 0
 901 000a 7B68     		ldr	r3, [r7, #4]
 902 000c 002B     		cmp	r3, #0
 903 000e 02D0     		beq	.L65
 904              		.loc 1 726 0 is_stmt 0 discriminator 1
 905 0010 0020     		mov	r0, #0
 906 0012 FFF7FEFF 		bl	CyHalt
 907              	.L65:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 908              		.loc 1 728 0 is_stmt 1
 909 0016 044B     		ldr	r3, .L66
 910 0018 7A68     		ldr	r2, [r7, #4]
 911 001a 9200     		lsl	r2, r2, #2
 912 001c 3968     		ldr	r1, [r7]
 913 001e D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 914              		.loc 1 729 0
 915 0020 BD46     		mov	sp, r7
 916 0022 02B0     		add	sp, sp, #8
 917              		@ sp needed
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 30


 918 0024 80BD     		pop	{r7, pc}
 919              	.L67:
 920 0026 C046     		.align	2
 921              	.L66:
 922 0028 00000000 		.word	ADC_countsPer10Volt
 923              		.cfi_endproc
 924              	.LFE16:
 925              		.size	ADC_SetGain, .-ADC_SetGain
 926              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 927              		.align	2
 928              		.global	ADC_CountsTo_mVolts
 929              		.code	16
 930              		.thumb_func
 931              		.type	ADC_CountsTo_mVolts, %function
 932              	ADC_CountsTo_mVolts:
 933              	.LFB17:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 934              		.loc 1 757 0
 935              		.cfi_startproc
 936 0000 80B5     		push	{r7, lr}
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 7, -8
 939              		.cfi_offset 14, -4
 940 0002 84B0     		sub	sp, sp, #16
 941              		.cfi_def_cfa_offset 24
 942 0004 00AF     		add	r7, sp, #0
 943              		.cfi_def_cfa_register 7
 944 0006 7860     		str	r0, [r7, #4]
 945 0008 0A1C     		mov	r2, r1
 946 000a BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 31


 947 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 948              		.loc 1 761 0
 949 000e 7B68     		ldr	r3, [r7, #4]
 950 0010 002B     		cmp	r3, #0
 951 0012 02D0     		beq	.L69
 952              		.loc 1 761 0 is_stmt 0 discriminator 1
 953 0014 0020     		mov	r0, #0
 954 0016 FFF7FEFF 		bl	CyHalt
 955              	.L69:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 956              		.loc 1 772 0 is_stmt 1
 957 001a 1F4B     		ldr	r3, .L75
 958 001c 7A68     		ldr	r2, [r7, #4]
 959 001e 5200     		lsl	r2, r2, #1
 960 0020 D35A     		ldrh	r3, [r2, r3]
 961 0022 99B2     		uxth	r1, r3
 962 0024 BB1C     		add	r3, r7, #2
 963 0026 1A88     		ldrh	r2, [r3]
 964 0028 8BB2     		uxth	r3, r1
 965 002a D31A     		sub	r3, r2, r3
 966 002c 9AB2     		uxth	r2, r3
 967 002e BB1C     		add	r3, r7, #2
 968 0030 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 969              		.loc 1 774 0
 970 0032 BB1C     		add	r3, r7, #2
 971 0034 0022     		mov	r2, #0
 972 0036 9B5E     		ldrsh	r3, [r3, r2]
 973 0038 184A     		ldr	r2, .L75+4
 974 003a 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 975              		.loc 1 775 0
 976 003c BB1C     		add	r3, r7, #2
 977 003e 0021     		mov	r1, #0
 978 0040 5B5E     		ldrsh	r3, [r3, r1]
 979 0042 002B     		cmp	r3, #0
 980 0044 08DD     		ble	.L70
 981              		.loc 1 775 0 is_stmt 0 discriminator 1
 982 0046 164B     		ldr	r3, .L75+8
 983 0048 7968     		ldr	r1, [r7, #4]
 984 004a 8900     		lsl	r1, r1, #2
 985 004c CB58     		ldr	r3, [r1, r3]
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 32


 986 004e 002B     		cmp	r3, #0
 987 0050 00DA     		bge	.L71
 988 0052 0133     		add	r3, r3, #1
 989              	.L71:
 990 0054 5B10     		asr	r3, r3, #1
 991 0056 08E0     		b	.L72
 992              	.L70:
 993              		.loc 1 775 0 discriminator 2
 994 0058 114B     		ldr	r3, .L75+8
 995 005a 7968     		ldr	r1, [r7, #4]
 996 005c 8900     		lsl	r1, r1, #2
 997 005e CB58     		ldr	r3, [r1, r3]
 998 0060 002B     		cmp	r3, #0
 999 0062 00DA     		bge	.L73
 1000 0064 0133     		add	r3, r3, #1
 1001              	.L73:
 1002 0066 5B10     		asr	r3, r3, #1
 1003 0068 5B42     		neg	r3, r3
 1004              	.L72:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1005              		.loc 1 774 0 is_stmt 1
 1006 006a D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1007              		.loc 1 776 0
 1008 006c 0C4B     		ldr	r3, .L75+8
 1009 006e 7A68     		ldr	r2, [r7, #4]
 1010 0070 9200     		lsl	r2, r2, #2
 1011 0072 D358     		ldr	r3, [r2, r3]
 1012 0074 081C     		mov	r0, r1
 1013 0076 191C     		mov	r1, r3
 1014 0078 FFF7FEFF 		bl	__aeabi_idiv
 1015 007c 031C     		mov	r3, r0
 1016 007e 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1017              		.loc 1 774 0
 1018 0080 0E23     		mov	r3, #14
 1019 0082 FB18     		add	r3, r7, r3
 1020 0084 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1021              		.loc 1 778 0
 1022 0086 0E23     		mov	r3, #14
 1023 0088 FB18     		add	r3, r7, r3
 1024 008a 1B88     		ldrh	r3, [r3]
 1025 008c 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 1026              		.loc 1 779 0
 1027 008e 181C     		mov	r0, r3
 1028 0090 BD46     		mov	sp, r7
 1029 0092 04B0     		add	sp, sp, #16
 1030              		@ sp needed
 1031 0094 80BD     		pop	{r7, pc}
 1032              	.L76:
 1033 0096 C046     		.align	2
 1034              	.L75:
 1035 0098 00000000 		.word	ADC_offset
 1036 009c 10270000 		.word	10000
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 33


 1037 00a0 00000000 		.word	ADC_countsPer10Volt
 1038              		.cfi_endproc
 1039              	.LFE17:
 1040              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1041              		.global	__aeabi_lmul
 1042              		.global	__aeabi_ldivmod
 1043              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1044              		.align	2
 1045              		.global	ADC_CountsTo_uVolts
 1046              		.code	16
 1047              		.thumb_func
 1048              		.type	ADC_CountsTo_uVolts, %function
 1049              	ADC_CountsTo_uVolts:
 1050              	.LFB18:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 1051              		.loc 1 811 0
 1052              		.cfi_startproc
 1053 0000 B0B5     		push	{r4, r5, r7, lr}
 1054              		.cfi_def_cfa_offset 16
 1055              		.cfi_offset 4, -16
 1056              		.cfi_offset 5, -12
 1057              		.cfi_offset 7, -8
 1058              		.cfi_offset 14, -4
 1059 0002 86B0     		sub	sp, sp, #24
 1060              		.cfi_def_cfa_offset 40
 1061 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 34


 1062              		.cfi_def_cfa_register 7
 1063 0006 F860     		str	r0, [r7, #12]
 1064 0008 0A1C     		mov	r2, r1
 1065 000a 0A23     		mov	r3, #10
 1066 000c FB18     		add	r3, r7, r3
 1067 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1068              		.loc 1 815 0
 1069 0010 FB68     		ldr	r3, [r7, #12]
 1070 0012 002B     		cmp	r3, #0
 1071 0014 02D0     		beq	.L78
 1072              		.loc 1 815 0 is_stmt 0 discriminator 1
 1073 0016 0020     		mov	r0, #0
 1074 0018 FFF7FEFF 		bl	CyHalt
 1075              	.L78:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1076              		.loc 1 826 0 is_stmt 1
 1077 001c 194B     		ldr	r3, .L80
 1078 001e FA68     		ldr	r2, [r7, #12]
 1079 0020 5200     		lsl	r2, r2, #1
 1080 0022 D35A     		ldrh	r3, [r2, r3]
 1081 0024 99B2     		uxth	r1, r3
 1082 0026 0A23     		mov	r3, #10
 1083 0028 FB18     		add	r3, r7, r3
 1084 002a 1A88     		ldrh	r2, [r3]
 1085 002c 8BB2     		uxth	r3, r1
 1086 002e D31A     		sub	r3, r2, r3
 1087 0030 9AB2     		uxth	r2, r3
 1088 0032 0A23     		mov	r3, #10
 1089 0034 FB18     		add	r3, r7, r3
 1090 0036 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1091              		.loc 1 828 0
 1092 0038 0A23     		mov	r3, #10
 1093 003a FB18     		add	r3, r7, r3
 1094 003c 1B88     		ldrh	r3, [r3]
 1095 003e 1BB2     		sxth	r3, r3
 1096 0040 3B60     		str	r3, [r7]
 1097 0042 DB17     		asr	r3, r3, #31
 1098 0044 7B60     		str	r3, [r7, #4]
 1099 0046 3868     		ldr	r0, [r7]
 1100 0048 7968     		ldr	r1, [r7, #4]
 1101 004a 0F4A     		ldr	r2, .L80+4
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 35


 1102 004c 0023     		mov	r3, #0
 1103 004e FFF7FEFF 		bl	__aeabi_lmul
 1104 0052 021C     		mov	r2, r0
 1105 0054 0B1C     		mov	r3, r1
 1106 0056 101C     		mov	r0, r2
 1107 0058 191C     		mov	r1, r3
 1108 005a 0C4B     		ldr	r3, .L80+8
 1109 005c FA68     		ldr	r2, [r7, #12]
 1110 005e 9200     		lsl	r2, r2, #2
 1111 0060 D358     		ldr	r3, [r2, r3]
 1112 0062 1C1C     		mov	r4, r3
 1113 0064 DB17     		asr	r3, r3, #31
 1114 0066 1D1C     		mov	r5, r3
 1115 0068 221C     		mov	r2, r4
 1116 006a 2B1C     		mov	r3, r5
 1117 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1118 0070 031C     		mov	r3, r0
 1119 0072 0C1C     		mov	r4, r1
 1120 0074 3B61     		str	r3, [r7, #16]
 1121 0076 7C61     		str	r4, [r7, #20]
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1122              		.loc 1 830 0
 1123 0078 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 1124              		.loc 1 831 0
 1125 007a 181C     		mov	r0, r3
 1126 007c BD46     		mov	sp, r7
 1127 007e 06B0     		add	sp, sp, #24
 1128              		@ sp needed
 1129 0080 B0BD     		pop	{r4, r5, r7, pc}
 1130              	.L81:
 1131 0082 C046     		.align	2
 1132              	.L80:
 1133 0084 00000000 		.word	ADC_offset
 1134 0088 80969800 		.word	10000000
 1135 008c 00000000 		.word	ADC_countsPer10Volt
 1136              		.cfi_endproc
 1137              	.LFE18:
 1138              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1139              		.global	__aeabi_i2f
 1140              		.global	__aeabi_fmul
 1141              		.global	__aeabi_fdiv
 1142              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1143              		.align	2
 1144              		.global	ADC_CountsTo_Volts
 1145              		.code	16
 1146              		.thumb_func
 1147              		.type	ADC_CountsTo_Volts, %function
 1148              	ADC_CountsTo_Volts:
 1149              	.LFB19:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 36


 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 1150              		.loc 1 856 0
 1151              		.cfi_startproc
 1152 0000 90B5     		push	{r4, r7, lr}
 1153              		.cfi_def_cfa_offset 12
 1154              		.cfi_offset 4, -12
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 85B0     		sub	sp, sp, #20
 1158              		.cfi_def_cfa_offset 32
 1159 0004 00AF     		add	r7, sp, #0
 1160              		.cfi_def_cfa_register 7
 1161 0006 7860     		str	r0, [r7, #4]
 1162 0008 0A1C     		mov	r2, r1
 1163 000a BB1C     		add	r3, r7, #2
 1164 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1165              		.loc 1 860 0
 1166 000e 7B68     		ldr	r3, [r7, #4]
 1167 0010 002B     		cmp	r3, #0
 1168 0012 02D0     		beq	.L83
 1169              		.loc 1 860 0 is_stmt 0 discriminator 1
 1170 0014 0020     		mov	r0, #0
 1171 0016 FFF7FEFF 		bl	CyHalt
 1172              	.L83:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 37


 1173              		.loc 1 871 0 is_stmt 1
 1174 001a 164B     		ldr	r3, .L85
 1175 001c 7A68     		ldr	r2, [r7, #4]
 1176 001e 5200     		lsl	r2, r2, #1
 1177 0020 D35A     		ldrh	r3, [r2, r3]
 1178 0022 99B2     		uxth	r1, r3
 1179 0024 BB1C     		add	r3, r7, #2
 1180 0026 1A88     		ldrh	r2, [r3]
 1181 0028 8BB2     		uxth	r3, r1
 1182 002a D31A     		sub	r3, r2, r3
 1183 002c 9AB2     		uxth	r2, r3
 1184 002e BB1C     		add	r3, r7, #2
 1185 0030 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1186              		.loc 1 873 0
 1187 0032 BB1C     		add	r3, r7, #2
 1188 0034 0022     		mov	r2, #0
 1189 0036 9B5E     		ldrsh	r3, [r3, r2]
 1190 0038 181C     		mov	r0, r3
 1191 003a FFF7FEFF 		bl	__aeabi_i2f
 1192 003e 031C     		add	r3, r0, #0
 1193 0040 181C     		add	r0, r3, #0
 1194 0042 0D49     		ldr	r1, .L85+4
 1195 0044 FFF7FEFF 		bl	__aeabi_fmul
 1196 0048 031C     		add	r3, r0, #0
 1197 004a 1C1C     		add	r4, r3, #0
 1198 004c 0B4B     		ldr	r3, .L85+8
 1199 004e 7A68     		ldr	r2, [r7, #4]
 1200 0050 9200     		lsl	r2, r2, #2
 1201 0052 D358     		ldr	r3, [r2, r3]
 1202 0054 181C     		mov	r0, r3
 1203 0056 FFF7FEFF 		bl	__aeabi_i2f
 1204 005a 031C     		add	r3, r0, #0
 1205 005c 201C     		add	r0, r4, #0
 1206 005e 191C     		add	r1, r3, #0
 1207 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1208 0064 031C     		add	r3, r0, #0
 1209 0066 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1210              		.loc 1 875 0
 1211 0068 FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 1212              		.loc 1 876 0
 1213 006a 181C     		add	r0, r3, #0
 1214 006c BD46     		mov	sp, r7
 1215 006e 05B0     		add	sp, sp, #20
 1216              		@ sp needed
 1217 0070 90BD     		pop	{r4, r7, pc}
 1218              	.L86:
 1219 0072 C046     		.align	2
 1220              	.L85:
 1221 0074 00000000 		.word	ADC_offset
 1222 0078 00002041 		.word	1092616192
 1223 007c 00000000 		.word	ADC_countsPer10Volt
 1224              		.cfi_endproc
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 38


 1225              	.LFE19:
 1226              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1227              		.text
 1228              	.Letext0:
 1229              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1230              		.section	.debug_info,"",%progbits
 1231              	.Ldebug_info0:
 1232 0000 77040000 		.4byte	0x477
 1233 0004 0400     		.2byte	0x4
 1234 0006 00000000 		.4byte	.Ldebug_abbrev0
 1235 000a 04       		.byte	0x4
 1236 000b 01       		.uleb128 0x1
 1237 000c 27000000 		.4byte	.LASF59
 1238 0010 01       		.byte	0x1
 1239 0011 B5000000 		.4byte	.LASF60
 1240 0015 BE010000 		.4byte	.LASF61
 1241 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1242 001d 00000000 		.4byte	0
 1243 0021 00000000 		.4byte	.Ldebug_line0
 1244 0025 02       		.uleb128 0x2
 1245 0026 01       		.byte	0x1
 1246 0027 06       		.byte	0x6
 1247 0028 59030000 		.4byte	.LASF0
 1248 002c 02       		.uleb128 0x2
 1249 002d 01       		.byte	0x1
 1250 002e 08       		.byte	0x8
 1251 002f 71010000 		.4byte	.LASF1
 1252 0033 02       		.uleb128 0x2
 1253 0034 02       		.byte	0x2
 1254 0035 05       		.byte	0x5
 1255 0036 19010000 		.4byte	.LASF2
 1256 003a 02       		.uleb128 0x2
 1257 003b 02       		.byte	0x2
 1258 003c 07       		.byte	0x7
 1259 003d 06010000 		.4byte	.LASF3
 1260 0041 02       		.uleb128 0x2
 1261 0042 04       		.byte	0x4
 1262 0043 05       		.byte	0x5
 1263 0044 4B030000 		.4byte	.LASF4
 1264 0048 02       		.uleb128 0x2
 1265 0049 04       		.byte	0x4
 1266 004a 07       		.byte	0x7
 1267 004b 96010000 		.4byte	.LASF5
 1268 004f 02       		.uleb128 0x2
 1269 0050 08       		.byte	0x8
 1270 0051 05       		.byte	0x5
 1271 0052 00000000 		.4byte	.LASF6
 1272 0056 02       		.uleb128 0x2
 1273 0057 08       		.byte	0x8
 1274 0058 07       		.byte	0x7
 1275 0059 8A020000 		.4byte	.LASF7
 1276 005d 03       		.uleb128 0x3
 1277 005e 04       		.byte	0x4
 1278 005f 05       		.byte	0x5
 1279 0060 696E7400 		.ascii	"int\000"
 1280 0064 02       		.uleb128 0x2
 1281 0065 04       		.byte	0x4
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 39


 1282 0066 07       		.byte	0x7
 1283 0067 6B020000 		.4byte	.LASF8
 1284 006b 04       		.uleb128 0x4
 1285 006c 31030000 		.4byte	.LASF9
 1286 0070 02       		.byte	0x2
 1287 0071 9801     		.2byte	0x198
 1288 0073 2C000000 		.4byte	0x2c
 1289 0077 04       		.uleb128 0x4
 1290 0078 42020000 		.4byte	.LASF10
 1291 007c 02       		.byte	0x2
 1292 007d 9901     		.2byte	0x199
 1293 007f 3A000000 		.4byte	0x3a
 1294 0083 04       		.uleb128 0x4
 1295 0084 53020000 		.4byte	.LASF11
 1296 0088 02       		.byte	0x2
 1297 0089 9A01     		.2byte	0x19a
 1298 008b 48000000 		.4byte	0x48
 1299 008f 04       		.uleb128 0x4
 1300 0090 90010000 		.4byte	.LASF12
 1301 0094 02       		.byte	0x2
 1302 0095 9C01     		.2byte	0x19c
 1303 0097 33000000 		.4byte	0x33
 1304 009b 04       		.uleb128 0x4
 1305 009c A8010000 		.4byte	.LASF13
 1306 00a0 02       		.byte	0x2
 1307 00a1 9D01     		.2byte	0x19d
 1308 00a3 41000000 		.4byte	0x41
 1309 00a7 04       		.uleb128 0x4
 1310 00a8 48010000 		.4byte	.LASF14
 1311 00ac 02       		.byte	0x2
 1312 00ad 9E01     		.2byte	0x19e
 1313 00af B3000000 		.4byte	0xb3
 1314 00b3 02       		.uleb128 0x2
 1315 00b4 04       		.byte	0x4
 1316 00b5 04       		.byte	0x4
 1317 00b6 DB000000 		.4byte	.LASF15
 1318 00ba 02       		.uleb128 0x2
 1319 00bb 08       		.byte	0x8
 1320 00bc 04       		.byte	0x4
 1321 00bd 2A020000 		.4byte	.LASF16
 1322 00c1 04       		.uleb128 0x4
 1323 00c2 71030000 		.4byte	.LASF17
 1324 00c6 02       		.byte	0x2
 1325 00c7 A301     		.2byte	0x1a3
 1326 00c9 4F000000 		.4byte	0x4f
 1327 00cd 02       		.uleb128 0x2
 1328 00ce 01       		.byte	0x1
 1329 00cf 08       		.byte	0x8
 1330 00d0 54030000 		.4byte	.LASF18
 1331 00d4 04       		.uleb128 0x4
 1332 00d5 21000000 		.4byte	.LASF19
 1333 00d9 02       		.byte	0x2
 1334 00da 4402     		.2byte	0x244
 1335 00dc E0000000 		.4byte	0xe0
 1336 00e0 05       		.uleb128 0x5
 1337 00e1 83000000 		.4byte	0x83
 1338 00e5 02       		.uleb128 0x2
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 40


 1339 00e6 04       		.byte	0x4
 1340 00e7 07       		.byte	0x7
 1341 00e8 CD020000 		.4byte	.LASF20
 1342 00ec 06       		.uleb128 0x6
 1343 00ed A8020000 		.4byte	.LASF24
 1344 00f1 01       		.byte	0x1
 1345 00f2 3F       		.byte	0x3f
 1346 00f3 00000000 		.4byte	.LFB2
 1347 00f7 24000000 		.4byte	.LFE2-.LFB2
 1348 00fb 01       		.uleb128 0x1
 1349 00fc 9C       		.byte	0x9c
 1350 00fd 07       		.uleb128 0x7
 1351 00fe B2020000 		.4byte	.LASF35
 1352 0102 01       		.byte	0x1
 1353 0103 5E       		.byte	0x5e
 1354 0104 00000000 		.4byte	.LFB3
 1355 0108 D4010000 		.4byte	.LFE3-.LFB3
 1356 010c 01       		.uleb128 0x1
 1357 010d 9C       		.byte	0x9c
 1358 010e 3D010000 		.4byte	0x13d
 1359 0112 08       		.uleb128 0x8
 1360 0113 13030000 		.4byte	.LASF21
 1361 0117 01       		.byte	0x1
 1362 0118 60       		.byte	0x60
 1363 0119 83000000 		.4byte	0x83
 1364 011d 02       		.uleb128 0x2
 1365 011e 91       		.byte	0x91
 1366 011f 74       		.sleb128 -12
 1367 0120 08       		.uleb128 0x8
 1368 0121 5B010000 		.4byte	.LASF22
 1369 0125 01       		.byte	0x1
 1370 0126 61       		.byte	0x61
 1371 0127 83000000 		.4byte	0x83
 1372 012b 02       		.uleb128 0x2
 1373 012c 91       		.byte	0x91
 1374 012d 6C       		.sleb128 -20
 1375 012e 08       		.uleb128 0x8
 1376 012f 83020000 		.4byte	.LASF23
 1377 0133 01       		.byte	0x1
 1378 0134 62       		.byte	0x62
 1379 0135 9B000000 		.4byte	0x9b
 1380 0139 02       		.uleb128 0x2
 1381 013a 91       		.byte	0x91
 1382 013b 70       		.sleb128 -16
 1383 013c 00       		.byte	0
 1384 013d 09       		.uleb128 0x9
 1385 013e 78020000 		.4byte	.LASF25
 1386 0142 01       		.byte	0x1
 1387 0143 4A01     		.2byte	0x14a
 1388 0145 00000000 		.4byte	.LFB4
 1389 0149 38000000 		.4byte	.LFE4-.LFB4
 1390 014d 01       		.uleb128 0x1
 1391 014e 9C       		.byte	0x9c
 1392 014f 0A       		.uleb128 0xa
 1393 0150 77030000 		.4byte	.LASF26
 1394 0154 01       		.byte	0x1
 1395 0155 6D01     		.2byte	0x16d
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 41


 1396 0157 00000000 		.4byte	.LFB5
 1397 015b 18000000 		.4byte	.LFE5-.LFB5
 1398 015f 01       		.uleb128 0x1
 1399 0160 9C       		.byte	0x9c
 1400 0161 0A       		.uleb128 0xa
 1401 0162 FD020000 		.4byte	.LASF27
 1402 0166 01       		.byte	0x1
 1403 0167 8701     		.2byte	0x187
 1404 0169 00000000 		.4byte	.LFB6
 1405 016d 14000000 		.4byte	.LFE6-.LFB6
 1406 0171 01       		.uleb128 0x1
 1407 0172 9C       		.byte	0x9c
 1408 0173 0A       		.uleb128 0xa
 1409 0174 21030000 		.4byte	.LASF28
 1410 0178 01       		.byte	0x1
 1411 0179 A001     		.2byte	0x1a0
 1412 017b 00000000 		.4byte	.LFB7
 1413 017f 08000000 		.4byte	.LFE7-.LFB7
 1414 0183 01       		.uleb128 0x1
 1415 0184 9C       		.byte	0x9c
 1416 0185 0B       		.uleb128 0xb
 1417 0186 16020000 		.4byte	.LASF30
 1418 018a 01       		.byte	0x1
 1419 018b C201     		.2byte	0x1c2
 1420 018d 83000000 		.4byte	0x83
 1421 0191 00000000 		.4byte	.LFB8
 1422 0195 48000000 		.4byte	.LFE8-.LFB8
 1423 0199 01       		.uleb128 0x1
 1424 019a 9C       		.byte	0x9c
 1425 019b BE010000 		.4byte	0x1be
 1426 019f 0C       		.uleb128 0xc
 1427 01a0 19030000 		.4byte	.LASF32
 1428 01a4 01       		.byte	0x1
 1429 01a5 C201     		.2byte	0x1c2
 1430 01a7 83000000 		.4byte	0x83
 1431 01ab 02       		.uleb128 0x2
 1432 01ac 91       		.byte	0x91
 1433 01ad 6C       		.sleb128 -20
 1434 01ae 0D       		.uleb128 0xd
 1435 01af 41010000 		.4byte	.LASF29
 1436 01b3 01       		.byte	0x1
 1437 01b4 C401     		.2byte	0x1c4
 1438 01b6 83000000 		.4byte	0x83
 1439 01ba 02       		.uleb128 0x2
 1440 01bb 91       		.byte	0x91
 1441 01bc 74       		.sleb128 -12
 1442 01bd 00       		.byte	0
 1443 01be 0E       		.uleb128 0xe
 1444 01bf AE010000 		.4byte	.LASF31
 1445 01c3 01       		.byte	0x1
 1446 01c4 F801     		.2byte	0x1f8
 1447 01c6 8F000000 		.4byte	0x8f
 1448 01ca 00000000 		.4byte	.LFB9
 1449 01ce 44000000 		.4byte	.LFE9-.LFB9
 1450 01d2 01       		.uleb128 0x1
 1451 01d3 9C       		.byte	0x9c
 1452 01d4 F7010000 		.4byte	0x1f7
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 42


 1453 01d8 0C       		.uleb128 0xc
 1454 01d9 C1020000 		.4byte	.LASF33
 1455 01dd 01       		.byte	0x1
 1456 01de F801     		.2byte	0x1f8
 1457 01e0 83000000 		.4byte	0x83
 1458 01e4 02       		.uleb128 0x2
 1459 01e5 91       		.byte	0x91
 1460 01e6 6C       		.sleb128 -20
 1461 01e7 0D       		.uleb128 0xd
 1462 01e8 A1020000 		.4byte	.LASF34
 1463 01ec 01       		.byte	0x1
 1464 01ed FA01     		.2byte	0x1fa
 1465 01ef 83000000 		.4byte	0x83
 1466 01f3 02       		.uleb128 0x2
 1467 01f4 91       		.byte	0x91
 1468 01f5 74       		.sleb128 -12
 1469 01f6 00       		.byte	0
 1470 01f7 0F       		.uleb128 0xf
 1471 01f8 F7010000 		.4byte	.LASF36
 1472 01fc 01       		.byte	0x1
 1473 01fd 2502     		.2byte	0x225
 1474 01ff 00000000 		.4byte	.LFB10
 1475 0203 1C000000 		.4byte	.LFE10-.LFB10
 1476 0207 01       		.uleb128 0x1
 1477 0208 9C       		.byte	0x9c
 1478 0209 1D020000 		.4byte	0x21d
 1479 020d 0C       		.uleb128 0xc
 1480 020e 0E030000 		.4byte	.LASF37
 1481 0212 01       		.byte	0x1
 1482 0213 2502     		.2byte	0x225
 1483 0215 83000000 		.4byte	0x83
 1484 0219 02       		.uleb128 0x2
 1485 021a 91       		.byte	0x91
 1486 021b 74       		.sleb128 -12
 1487 021c 00       		.byte	0
 1488 021d 0F       		.uleb128 0xf
 1489 021e 31010000 		.4byte	.LASF38
 1490 0222 01       		.byte	0x1
 1491 0223 5102     		.2byte	0x251
 1492 0225 00000000 		.4byte	.LFB11
 1493 0229 30000000 		.4byte	.LFE11-.LFB11
 1494 022d 01       		.uleb128 0x1
 1495 022e 9C       		.byte	0x9c
 1496 022f 43020000 		.4byte	0x243
 1497 0233 0C       		.uleb128 0xc
 1498 0234 31020000 		.4byte	.LASF39
 1499 0238 01       		.byte	0x1
 1500 0239 5102     		.2byte	0x251
 1501 023b 83000000 		.4byte	0x83
 1502 023f 02       		.uleb128 0x2
 1503 0240 91       		.byte	0x91
 1504 0241 74       		.sleb128 -12
 1505 0242 00       		.byte	0
 1506 0243 0F       		.uleb128 0xf
 1507 0244 7F010000 		.4byte	.LASF40
 1508 0248 01       		.byte	0x1
 1509 0249 6602     		.2byte	0x266
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 43


 1510 024b 00000000 		.4byte	.LFB12
 1511 024f 2C000000 		.4byte	.LFE12-.LFB12
 1512 0253 01       		.uleb128 0x1
 1513 0254 9C       		.byte	0x9c
 1514 0255 69020000 		.4byte	0x269
 1515 0259 0C       		.uleb128 0xc
 1516 025a E1000000 		.4byte	.LASF41
 1517 025e 01       		.byte	0x1
 1518 025f 6602     		.2byte	0x266
 1519 0261 83000000 		.4byte	0x83
 1520 0265 02       		.uleb128 0x2
 1521 0266 91       		.byte	0x91
 1522 0267 74       		.sleb128 -12
 1523 0268 00       		.byte	0
 1524 0269 0F       		.uleb128 0xf
 1525 026a 5A020000 		.4byte	.LASF42
 1526 026e 01       		.byte	0x1
 1527 026f 7E02     		.2byte	0x27e
 1528 0271 00000000 		.4byte	.LFB13
 1529 0275 1C000000 		.4byte	.LFE13-.LFB13
 1530 0279 01       		.uleb128 0x1
 1531 027a 9C       		.byte	0x9c
 1532 027b 8F020000 		.4byte	0x28f
 1533 027f 0C       		.uleb128 0xc
 1534 0280 0E030000 		.4byte	.LASF37
 1535 0284 01       		.byte	0x1
 1536 0285 7E02     		.2byte	0x27e
 1537 0287 83000000 		.4byte	0x83
 1538 028b 02       		.uleb128 0x2
 1539 028c 91       		.byte	0x91
 1540 028d 74       		.sleb128 -12
 1541 028e 00       		.byte	0
 1542 028f 0F       		.uleb128 0xf
 1543 0290 07020000 		.4byte	.LASF43
 1544 0294 01       		.byte	0x1
 1545 0295 9502     		.2byte	0x295
 1546 0297 00000000 		.4byte	.LFB14
 1547 029b 1C000000 		.4byte	.LFE14-.LFB14
 1548 029f 01       		.uleb128 0x1
 1549 02a0 9C       		.byte	0x9c
 1550 02a1 B5020000 		.4byte	0x2b5
 1551 02a5 0C       		.uleb128 0xc
 1552 02a6 0E030000 		.4byte	.LASF37
 1553 02aa 01       		.byte	0x1
 1554 02ab 9502     		.2byte	0x295
 1555 02ad 83000000 		.4byte	0x83
 1556 02b1 02       		.uleb128 0x2
 1557 02b2 91       		.byte	0x91
 1558 02b3 74       		.sleb128 -12
 1559 02b4 00       		.byte	0
 1560 02b5 10       		.uleb128 0x10
 1561 02b6 23010000 		.4byte	.LASF44
 1562 02ba 01       		.byte	0x1
 1563 02bb B102     		.2byte	0x2b1
 1564 02bd 00000000 		.4byte	.LFB15
 1565 02c1 30000000 		.4byte	.LFE15-.LFB15
 1566 02c5 01       		.uleb128 0x1
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 44


 1567 02c6 9C       		.byte	0x9c
 1568 02c7 EA020000 		.4byte	0x2ea
 1569 02cb 0C       		.uleb128 0xc
 1570 02cc C1020000 		.4byte	.LASF33
 1571 02d0 01       		.byte	0x1
 1572 02d1 B102     		.2byte	0x2b1
 1573 02d3 83000000 		.4byte	0x83
 1574 02d7 02       		.uleb128 0x2
 1575 02d8 91       		.byte	0x91
 1576 02d9 74       		.sleb128 -12
 1577 02da 0C       		.uleb128 0xc
 1578 02db D4000000 		.4byte	.LASF45
 1579 02df 01       		.byte	0x1
 1580 02e0 B102     		.2byte	0x2b1
 1581 02e2 8F000000 		.4byte	0x8f
 1582 02e6 02       		.uleb128 0x2
 1583 02e7 91       		.byte	0x91
 1584 02e8 72       		.sleb128 -14
 1585 02e9 00       		.byte	0
 1586 02ea 10       		.uleb128 0x10
 1587 02eb 65010000 		.4byte	.LASF46
 1588 02ef 01       		.byte	0x1
 1589 02f0 D302     		.2byte	0x2d3
 1590 02f2 00000000 		.4byte	.LFB16
 1591 02f6 2C000000 		.4byte	.LFE16-.LFB16
 1592 02fa 01       		.uleb128 0x1
 1593 02fb 9C       		.byte	0x9c
 1594 02fc 1F030000 		.4byte	0x31f
 1595 0300 0C       		.uleb128 0xc
 1596 0301 C1020000 		.4byte	.LASF33
 1597 0305 01       		.byte	0x1
 1598 0306 D302     		.2byte	0x2d3
 1599 0308 83000000 		.4byte	0x83
 1600 030c 02       		.uleb128 0x2
 1601 030d 91       		.byte	0x91
 1602 030e 74       		.sleb128 -12
 1603 030f 0C       		.uleb128 0xc
 1604 0310 3A020000 		.4byte	.LASF47
 1605 0314 01       		.byte	0x1
 1606 0315 D302     		.2byte	0x2d3
 1607 0317 9B000000 		.4byte	0x9b
 1608 031b 02       		.uleb128 0x2
 1609 031c 91       		.byte	0x91
 1610 031d 70       		.sleb128 -16
 1611 031e 00       		.byte	0
 1612 031f 0E       		.uleb128 0xe
 1613 0320 EB000000 		.4byte	.LASF48
 1614 0324 01       		.byte	0x1
 1615 0325 F402     		.2byte	0x2f4
 1616 0327 8F000000 		.4byte	0x8f
 1617 032b 00000000 		.4byte	.LFB17
 1618 032f A4000000 		.4byte	.LFE17-.LFB17
 1619 0333 01       		.uleb128 0x1
 1620 0334 9C       		.byte	0x9c
 1621 0335 67030000 		.4byte	0x367
 1622 0339 0C       		.uleb128 0xc
 1623 033a C1020000 		.4byte	.LASF33
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 45


 1624 033e 01       		.byte	0x1
 1625 033f F402     		.2byte	0x2f4
 1626 0341 83000000 		.4byte	0x83
 1627 0345 02       		.uleb128 0x2
 1628 0346 91       		.byte	0x91
 1629 0347 6C       		.sleb128 -20
 1630 0348 0C       		.uleb128 0xc
 1631 0349 49020000 		.4byte	.LASF49
 1632 034d 01       		.byte	0x1
 1633 034e F402     		.2byte	0x2f4
 1634 0350 8F000000 		.4byte	0x8f
 1635 0354 02       		.uleb128 0x2
 1636 0355 91       		.byte	0x91
 1637 0356 6A       		.sleb128 -22
 1638 0357 0D       		.uleb128 0xd
 1639 0358 C6020000 		.4byte	.LASF50
 1640 035c 01       		.byte	0x1
 1641 035d F602     		.2byte	0x2f6
 1642 035f 8F000000 		.4byte	0x8f
 1643 0363 02       		.uleb128 0x2
 1644 0364 91       		.byte	0x91
 1645 0365 76       		.sleb128 -10
 1646 0366 00       		.byte	0
 1647 0367 0E       		.uleb128 0xe
 1648 0368 D6020000 		.4byte	.LASF51
 1649 036c 01       		.byte	0x1
 1650 036d 2A03     		.2byte	0x32a
 1651 036f 9B000000 		.4byte	0x9b
 1652 0373 00000000 		.4byte	.LFB18
 1653 0377 90000000 		.4byte	.LFE18-.LFB18
 1654 037b 01       		.uleb128 0x1
 1655 037c 9C       		.byte	0x9c
 1656 037d AF030000 		.4byte	0x3af
 1657 0381 0C       		.uleb128 0xc
 1658 0382 C1020000 		.4byte	.LASF33
 1659 0386 01       		.byte	0x1
 1660 0387 2A03     		.2byte	0x32a
 1661 0389 83000000 		.4byte	0x83
 1662 038d 02       		.uleb128 0x2
 1663 038e 91       		.byte	0x91
 1664 038f 64       		.sleb128 -28
 1665 0390 0C       		.uleb128 0xc
 1666 0391 49020000 		.4byte	.LASF49
 1667 0395 01       		.byte	0x1
 1668 0396 2A03     		.2byte	0x32a
 1669 0398 8F000000 		.4byte	0x8f
 1670 039c 02       		.uleb128 0x2
 1671 039d 91       		.byte	0x91
 1672 039e 62       		.sleb128 -30
 1673 039f 0D       		.uleb128 0xd
 1674 03a0 FF000000 		.4byte	.LASF52
 1675 03a4 01       		.byte	0x1
 1676 03a5 2C03     		.2byte	0x32c
 1677 03a7 C1000000 		.4byte	0xc1
 1678 03ab 02       		.uleb128 0x2
 1679 03ac 91       		.byte	0x91
 1680 03ad 68       		.sleb128 -24
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 46


 1681 03ae 00       		.byte	0
 1682 03af 0E       		.uleb128 0xe
 1683 03b0 EA020000 		.4byte	.LASF53
 1684 03b4 01       		.byte	0x1
 1685 03b5 5703     		.2byte	0x357
 1686 03b7 A7000000 		.4byte	0xa7
 1687 03bb 00000000 		.4byte	.LFB19
 1688 03bf 80000000 		.4byte	.LFE19-.LFB19
 1689 03c3 01       		.uleb128 0x1
 1690 03c4 9C       		.byte	0x9c
 1691 03c5 F7030000 		.4byte	0x3f7
 1692 03c9 0C       		.uleb128 0xc
 1693 03ca C1020000 		.4byte	.LASF33
 1694 03ce 01       		.byte	0x1
 1695 03cf 5703     		.2byte	0x357
 1696 03d1 83000000 		.4byte	0x83
 1697 03d5 02       		.uleb128 0x2
 1698 03d6 91       		.byte	0x91
 1699 03d7 64       		.sleb128 -28
 1700 03d8 0C       		.uleb128 0xc
 1701 03d9 49020000 		.4byte	.LASF49
 1702 03dd 01       		.byte	0x1
 1703 03de 5703     		.2byte	0x357
 1704 03e0 8F000000 		.4byte	0x8f
 1705 03e4 02       		.uleb128 0x2
 1706 03e5 91       		.byte	0x91
 1707 03e6 62       		.sleb128 -30
 1708 03e7 0D       		.uleb128 0xd
 1709 03e8 BB020000 		.4byte	.LASF54
 1710 03ec 01       		.byte	0x1
 1711 03ed 5903     		.2byte	0x359
 1712 03ef A7000000 		.4byte	0xa7
 1713 03f3 02       		.uleb128 0x2
 1714 03f4 91       		.byte	0x91
 1715 03f5 6C       		.sleb128 -20
 1716 03f6 00       		.byte	0
 1717 03f7 11       		.uleb128 0x11
 1718 03f8 83000000 		.4byte	0x83
 1719 03fc 07040000 		.4byte	0x407
 1720 0400 12       		.uleb128 0x12
 1721 0401 E5000000 		.4byte	0xe5
 1722 0405 00       		.byte	0
 1723 0406 00       		.byte	0
 1724 0407 08       		.uleb128 0x8
 1725 0408 0E000000 		.4byte	.LASF55
 1726 040c 01       		.byte	0x1
 1727 040d 21       		.byte	0x21
 1728 040e 18040000 		.4byte	0x418
 1729 0412 05       		.uleb128 0x5
 1730 0413 03       		.byte	0x3
 1731 0414 00000000 		.4byte	ADC_channelsConfig
 1732 0418 13       		.uleb128 0x13
 1733 0419 F7030000 		.4byte	0x3f7
 1734 041d 14       		.uleb128 0x14
 1735 041e 65030000 		.4byte	.LASF56
 1736 0422 01       		.byte	0x1
 1737 0423 18       		.byte	0x18
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 47


 1738 0424 6B000000 		.4byte	0x6b
 1739 0428 05       		.uleb128 0x5
 1740 0429 03       		.byte	0x3
 1741 042a 00000000 		.4byte	ADC_initVar
 1742 042e 11       		.uleb128 0x11
 1743 042f 8F000000 		.4byte	0x8f
 1744 0433 3E040000 		.4byte	0x43e
 1745 0437 12       		.uleb128 0x12
 1746 0438 E5000000 		.4byte	0xe5
 1747 043c 00       		.byte	0
 1748 043d 00       		.byte	0
 1749 043e 14       		.uleb128 0x14
 1750 043f 50010000 		.4byte	.LASF57
 1751 0443 01       		.byte	0x1
 1752 0444 19       		.byte	0x19
 1753 0445 4F040000 		.4byte	0x44f
 1754 0449 05       		.uleb128 0x5
 1755 044a 03       		.byte	0x3
 1756 044b 00000000 		.4byte	ADC_offset
 1757 044f 05       		.uleb128 0x5
 1758 0450 2E040000 		.4byte	0x42e
 1759 0454 11       		.uleb128 0x11
 1760 0455 9B000000 		.4byte	0x9b
 1761 0459 64040000 		.4byte	0x464
 1762 045d 12       		.uleb128 0x12
 1763 045e E5000000 		.4byte	0xe5
 1764 0462 00       		.byte	0
 1765 0463 00       		.byte	0
 1766 0464 14       		.uleb128 0x14
 1767 0465 37030000 		.4byte	.LASF58
 1768 0469 01       		.byte	0x1
 1769 046a 1A       		.byte	0x1a
 1770 046b 75040000 		.4byte	0x475
 1771 046f 05       		.uleb128 0x5
 1772 0470 03       		.byte	0x3
 1773 0471 00000000 		.4byte	ADC_countsPer10Volt
 1774 0475 05       		.uleb128 0x5
 1775 0476 54040000 		.4byte	0x454
 1776 047a 00       		.byte	0
 1777              		.section	.debug_abbrev,"",%progbits
 1778              	.Ldebug_abbrev0:
 1779 0000 01       		.uleb128 0x1
 1780 0001 11       		.uleb128 0x11
 1781 0002 01       		.byte	0x1
 1782 0003 25       		.uleb128 0x25
 1783 0004 0E       		.uleb128 0xe
 1784 0005 13       		.uleb128 0x13
 1785 0006 0B       		.uleb128 0xb
 1786 0007 03       		.uleb128 0x3
 1787 0008 0E       		.uleb128 0xe
 1788 0009 1B       		.uleb128 0x1b
 1789 000a 0E       		.uleb128 0xe
 1790 000b 55       		.uleb128 0x55
 1791 000c 17       		.uleb128 0x17
 1792 000d 11       		.uleb128 0x11
 1793 000e 01       		.uleb128 0x1
 1794 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 48


 1795 0010 17       		.uleb128 0x17
 1796 0011 00       		.byte	0
 1797 0012 00       		.byte	0
 1798 0013 02       		.uleb128 0x2
 1799 0014 24       		.uleb128 0x24
 1800 0015 00       		.byte	0
 1801 0016 0B       		.uleb128 0xb
 1802 0017 0B       		.uleb128 0xb
 1803 0018 3E       		.uleb128 0x3e
 1804 0019 0B       		.uleb128 0xb
 1805 001a 03       		.uleb128 0x3
 1806 001b 0E       		.uleb128 0xe
 1807 001c 00       		.byte	0
 1808 001d 00       		.byte	0
 1809 001e 03       		.uleb128 0x3
 1810 001f 24       		.uleb128 0x24
 1811 0020 00       		.byte	0
 1812 0021 0B       		.uleb128 0xb
 1813 0022 0B       		.uleb128 0xb
 1814 0023 3E       		.uleb128 0x3e
 1815 0024 0B       		.uleb128 0xb
 1816 0025 03       		.uleb128 0x3
 1817 0026 08       		.uleb128 0x8
 1818 0027 00       		.byte	0
 1819 0028 00       		.byte	0
 1820 0029 04       		.uleb128 0x4
 1821 002a 16       		.uleb128 0x16
 1822 002b 00       		.byte	0
 1823 002c 03       		.uleb128 0x3
 1824 002d 0E       		.uleb128 0xe
 1825 002e 3A       		.uleb128 0x3a
 1826 002f 0B       		.uleb128 0xb
 1827 0030 3B       		.uleb128 0x3b
 1828 0031 05       		.uleb128 0x5
 1829 0032 49       		.uleb128 0x49
 1830 0033 13       		.uleb128 0x13
 1831 0034 00       		.byte	0
 1832 0035 00       		.byte	0
 1833 0036 05       		.uleb128 0x5
 1834 0037 35       		.uleb128 0x35
 1835 0038 00       		.byte	0
 1836 0039 49       		.uleb128 0x49
 1837 003a 13       		.uleb128 0x13
 1838 003b 00       		.byte	0
 1839 003c 00       		.byte	0
 1840 003d 06       		.uleb128 0x6
 1841 003e 2E       		.uleb128 0x2e
 1842 003f 00       		.byte	0
 1843 0040 3F       		.uleb128 0x3f
 1844 0041 19       		.uleb128 0x19
 1845 0042 03       		.uleb128 0x3
 1846 0043 0E       		.uleb128 0xe
 1847 0044 3A       		.uleb128 0x3a
 1848 0045 0B       		.uleb128 0xb
 1849 0046 3B       		.uleb128 0x3b
 1850 0047 0B       		.uleb128 0xb
 1851 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 49


 1852 0049 19       		.uleb128 0x19
 1853 004a 11       		.uleb128 0x11
 1854 004b 01       		.uleb128 0x1
 1855 004c 12       		.uleb128 0x12
 1856 004d 06       		.uleb128 0x6
 1857 004e 40       		.uleb128 0x40
 1858 004f 18       		.uleb128 0x18
 1859 0050 9642     		.uleb128 0x2116
 1860 0052 19       		.uleb128 0x19
 1861 0053 00       		.byte	0
 1862 0054 00       		.byte	0
 1863 0055 07       		.uleb128 0x7
 1864 0056 2E       		.uleb128 0x2e
 1865 0057 01       		.byte	0x1
 1866 0058 3F       		.uleb128 0x3f
 1867 0059 19       		.uleb128 0x19
 1868 005a 03       		.uleb128 0x3
 1869 005b 0E       		.uleb128 0xe
 1870 005c 3A       		.uleb128 0x3a
 1871 005d 0B       		.uleb128 0xb
 1872 005e 3B       		.uleb128 0x3b
 1873 005f 0B       		.uleb128 0xb
 1874 0060 27       		.uleb128 0x27
 1875 0061 19       		.uleb128 0x19
 1876 0062 11       		.uleb128 0x11
 1877 0063 01       		.uleb128 0x1
 1878 0064 12       		.uleb128 0x12
 1879 0065 06       		.uleb128 0x6
 1880 0066 40       		.uleb128 0x40
 1881 0067 18       		.uleb128 0x18
 1882 0068 9642     		.uleb128 0x2116
 1883 006a 19       		.uleb128 0x19
 1884 006b 01       		.uleb128 0x1
 1885 006c 13       		.uleb128 0x13
 1886 006d 00       		.byte	0
 1887 006e 00       		.byte	0
 1888 006f 08       		.uleb128 0x8
 1889 0070 34       		.uleb128 0x34
 1890 0071 00       		.byte	0
 1891 0072 03       		.uleb128 0x3
 1892 0073 0E       		.uleb128 0xe
 1893 0074 3A       		.uleb128 0x3a
 1894 0075 0B       		.uleb128 0xb
 1895 0076 3B       		.uleb128 0x3b
 1896 0077 0B       		.uleb128 0xb
 1897 0078 49       		.uleb128 0x49
 1898 0079 13       		.uleb128 0x13
 1899 007a 02       		.uleb128 0x2
 1900 007b 18       		.uleb128 0x18
 1901 007c 00       		.byte	0
 1902 007d 00       		.byte	0
 1903 007e 09       		.uleb128 0x9
 1904 007f 2E       		.uleb128 0x2e
 1905 0080 00       		.byte	0
 1906 0081 3F       		.uleb128 0x3f
 1907 0082 19       		.uleb128 0x19
 1908 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 50


 1909 0084 0E       		.uleb128 0xe
 1910 0085 3A       		.uleb128 0x3a
 1911 0086 0B       		.uleb128 0xb
 1912 0087 3B       		.uleb128 0x3b
 1913 0088 05       		.uleb128 0x5
 1914 0089 27       		.uleb128 0x27
 1915 008a 19       		.uleb128 0x19
 1916 008b 11       		.uleb128 0x11
 1917 008c 01       		.uleb128 0x1
 1918 008d 12       		.uleb128 0x12
 1919 008e 06       		.uleb128 0x6
 1920 008f 40       		.uleb128 0x40
 1921 0090 18       		.uleb128 0x18
 1922 0091 9642     		.uleb128 0x2116
 1923 0093 19       		.uleb128 0x19
 1924 0094 00       		.byte	0
 1925 0095 00       		.byte	0
 1926 0096 0A       		.uleb128 0xa
 1927 0097 2E       		.uleb128 0x2e
 1928 0098 00       		.byte	0
 1929 0099 3F       		.uleb128 0x3f
 1930 009a 19       		.uleb128 0x19
 1931 009b 03       		.uleb128 0x3
 1932 009c 0E       		.uleb128 0xe
 1933 009d 3A       		.uleb128 0x3a
 1934 009e 0B       		.uleb128 0xb
 1935 009f 3B       		.uleb128 0x3b
 1936 00a0 05       		.uleb128 0x5
 1937 00a1 27       		.uleb128 0x27
 1938 00a2 19       		.uleb128 0x19
 1939 00a3 11       		.uleb128 0x11
 1940 00a4 01       		.uleb128 0x1
 1941 00a5 12       		.uleb128 0x12
 1942 00a6 06       		.uleb128 0x6
 1943 00a7 40       		.uleb128 0x40
 1944 00a8 18       		.uleb128 0x18
 1945 00a9 9742     		.uleb128 0x2117
 1946 00ab 19       		.uleb128 0x19
 1947 00ac 00       		.byte	0
 1948 00ad 00       		.byte	0
 1949 00ae 0B       		.uleb128 0xb
 1950 00af 2E       		.uleb128 0x2e
 1951 00b0 01       		.byte	0x1
 1952 00b1 3F       		.uleb128 0x3f
 1953 00b2 19       		.uleb128 0x19
 1954 00b3 03       		.uleb128 0x3
 1955 00b4 0E       		.uleb128 0xe
 1956 00b5 3A       		.uleb128 0x3a
 1957 00b6 0B       		.uleb128 0xb
 1958 00b7 3B       		.uleb128 0x3b
 1959 00b8 05       		.uleb128 0x5
 1960 00b9 27       		.uleb128 0x27
 1961 00ba 19       		.uleb128 0x19
 1962 00bb 49       		.uleb128 0x49
 1963 00bc 13       		.uleb128 0x13
 1964 00bd 11       		.uleb128 0x11
 1965 00be 01       		.uleb128 0x1
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 51


 1966 00bf 12       		.uleb128 0x12
 1967 00c0 06       		.uleb128 0x6
 1968 00c1 40       		.uleb128 0x40
 1969 00c2 18       		.uleb128 0x18
 1970 00c3 9742     		.uleb128 0x2117
 1971 00c5 19       		.uleb128 0x19
 1972 00c6 01       		.uleb128 0x1
 1973 00c7 13       		.uleb128 0x13
 1974 00c8 00       		.byte	0
 1975 00c9 00       		.byte	0
 1976 00ca 0C       		.uleb128 0xc
 1977 00cb 05       		.uleb128 0x5
 1978 00cc 00       		.byte	0
 1979 00cd 03       		.uleb128 0x3
 1980 00ce 0E       		.uleb128 0xe
 1981 00cf 3A       		.uleb128 0x3a
 1982 00d0 0B       		.uleb128 0xb
 1983 00d1 3B       		.uleb128 0x3b
 1984 00d2 05       		.uleb128 0x5
 1985 00d3 49       		.uleb128 0x49
 1986 00d4 13       		.uleb128 0x13
 1987 00d5 02       		.uleb128 0x2
 1988 00d6 18       		.uleb128 0x18
 1989 00d7 00       		.byte	0
 1990 00d8 00       		.byte	0
 1991 00d9 0D       		.uleb128 0xd
 1992 00da 34       		.uleb128 0x34
 1993 00db 00       		.byte	0
 1994 00dc 03       		.uleb128 0x3
 1995 00dd 0E       		.uleb128 0xe
 1996 00de 3A       		.uleb128 0x3a
 1997 00df 0B       		.uleb128 0xb
 1998 00e0 3B       		.uleb128 0x3b
 1999 00e1 05       		.uleb128 0x5
 2000 00e2 49       		.uleb128 0x49
 2001 00e3 13       		.uleb128 0x13
 2002 00e4 02       		.uleb128 0x2
 2003 00e5 18       		.uleb128 0x18
 2004 00e6 00       		.byte	0
 2005 00e7 00       		.byte	0
 2006 00e8 0E       		.uleb128 0xe
 2007 00e9 2E       		.uleb128 0x2e
 2008 00ea 01       		.byte	0x1
 2009 00eb 3F       		.uleb128 0x3f
 2010 00ec 19       		.uleb128 0x19
 2011 00ed 03       		.uleb128 0x3
 2012 00ee 0E       		.uleb128 0xe
 2013 00ef 3A       		.uleb128 0x3a
 2014 00f0 0B       		.uleb128 0xb
 2015 00f1 3B       		.uleb128 0x3b
 2016 00f2 05       		.uleb128 0x5
 2017 00f3 27       		.uleb128 0x27
 2018 00f4 19       		.uleb128 0x19
 2019 00f5 49       		.uleb128 0x49
 2020 00f6 13       		.uleb128 0x13
 2021 00f7 11       		.uleb128 0x11
 2022 00f8 01       		.uleb128 0x1
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 52


 2023 00f9 12       		.uleb128 0x12
 2024 00fa 06       		.uleb128 0x6
 2025 00fb 40       		.uleb128 0x40
 2026 00fc 18       		.uleb128 0x18
 2027 00fd 9642     		.uleb128 0x2116
 2028 00ff 19       		.uleb128 0x19
 2029 0100 01       		.uleb128 0x1
 2030 0101 13       		.uleb128 0x13
 2031 0102 00       		.byte	0
 2032 0103 00       		.byte	0
 2033 0104 0F       		.uleb128 0xf
 2034 0105 2E       		.uleb128 0x2e
 2035 0106 01       		.byte	0x1
 2036 0107 3F       		.uleb128 0x3f
 2037 0108 19       		.uleb128 0x19
 2038 0109 03       		.uleb128 0x3
 2039 010a 0E       		.uleb128 0xe
 2040 010b 3A       		.uleb128 0x3a
 2041 010c 0B       		.uleb128 0xb
 2042 010d 3B       		.uleb128 0x3b
 2043 010e 05       		.uleb128 0x5
 2044 010f 27       		.uleb128 0x27
 2045 0110 19       		.uleb128 0x19
 2046 0111 11       		.uleb128 0x11
 2047 0112 01       		.uleb128 0x1
 2048 0113 12       		.uleb128 0x12
 2049 0114 06       		.uleb128 0x6
 2050 0115 40       		.uleb128 0x40
 2051 0116 18       		.uleb128 0x18
 2052 0117 9742     		.uleb128 0x2117
 2053 0119 19       		.uleb128 0x19
 2054 011a 01       		.uleb128 0x1
 2055 011b 13       		.uleb128 0x13
 2056 011c 00       		.byte	0
 2057 011d 00       		.byte	0
 2058 011e 10       		.uleb128 0x10
 2059 011f 2E       		.uleb128 0x2e
 2060 0120 01       		.byte	0x1
 2061 0121 3F       		.uleb128 0x3f
 2062 0122 19       		.uleb128 0x19
 2063 0123 03       		.uleb128 0x3
 2064 0124 0E       		.uleb128 0xe
 2065 0125 3A       		.uleb128 0x3a
 2066 0126 0B       		.uleb128 0xb
 2067 0127 3B       		.uleb128 0x3b
 2068 0128 05       		.uleb128 0x5
 2069 0129 27       		.uleb128 0x27
 2070 012a 19       		.uleb128 0x19
 2071 012b 11       		.uleb128 0x11
 2072 012c 01       		.uleb128 0x1
 2073 012d 12       		.uleb128 0x12
 2074 012e 06       		.uleb128 0x6
 2075 012f 40       		.uleb128 0x40
 2076 0130 18       		.uleb128 0x18
 2077 0131 9642     		.uleb128 0x2116
 2078 0133 19       		.uleb128 0x19
 2079 0134 01       		.uleb128 0x1
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 53


 2080 0135 13       		.uleb128 0x13
 2081 0136 00       		.byte	0
 2082 0137 00       		.byte	0
 2083 0138 11       		.uleb128 0x11
 2084 0139 01       		.uleb128 0x1
 2085 013a 01       		.byte	0x1
 2086 013b 49       		.uleb128 0x49
 2087 013c 13       		.uleb128 0x13
 2088 013d 01       		.uleb128 0x1
 2089 013e 13       		.uleb128 0x13
 2090 013f 00       		.byte	0
 2091 0140 00       		.byte	0
 2092 0141 12       		.uleb128 0x12
 2093 0142 21       		.uleb128 0x21
 2094 0143 00       		.byte	0
 2095 0144 49       		.uleb128 0x49
 2096 0145 13       		.uleb128 0x13
 2097 0146 2F       		.uleb128 0x2f
 2098 0147 0B       		.uleb128 0xb
 2099 0148 00       		.byte	0
 2100 0149 00       		.byte	0
 2101 014a 13       		.uleb128 0x13
 2102 014b 26       		.uleb128 0x26
 2103 014c 00       		.byte	0
 2104 014d 49       		.uleb128 0x49
 2105 014e 13       		.uleb128 0x13
 2106 014f 00       		.byte	0
 2107 0150 00       		.byte	0
 2108 0151 14       		.uleb128 0x14
 2109 0152 34       		.uleb128 0x34
 2110 0153 00       		.byte	0
 2111 0154 03       		.uleb128 0x3
 2112 0155 0E       		.uleb128 0xe
 2113 0156 3A       		.uleb128 0x3a
 2114 0157 0B       		.uleb128 0xb
 2115 0158 3B       		.uleb128 0x3b
 2116 0159 0B       		.uleb128 0xb
 2117 015a 49       		.uleb128 0x49
 2118 015b 13       		.uleb128 0x13
 2119 015c 3F       		.uleb128 0x3f
 2120 015d 19       		.uleb128 0x19
 2121 015e 02       		.uleb128 0x2
 2122 015f 18       		.uleb128 0x18
 2123 0160 00       		.byte	0
 2124 0161 00       		.byte	0
 2125 0162 00       		.byte	0
 2126              		.section	.debug_aranges,"",%progbits
 2127 0000 A4000000 		.4byte	0xa4
 2128 0004 0200     		.2byte	0x2
 2129 0006 00000000 		.4byte	.Ldebug_info0
 2130 000a 04       		.byte	0x4
 2131 000b 00       		.byte	0
 2132 000c 0000     		.2byte	0
 2133 000e 0000     		.2byte	0
 2134 0010 00000000 		.4byte	.LFB2
 2135 0014 24000000 		.4byte	.LFE2-.LFB2
 2136 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 54


 2137 001c D4010000 		.4byte	.LFE3-.LFB3
 2138 0020 00000000 		.4byte	.LFB4
 2139 0024 38000000 		.4byte	.LFE4-.LFB4
 2140 0028 00000000 		.4byte	.LFB5
 2141 002c 18000000 		.4byte	.LFE5-.LFB5
 2142 0030 00000000 		.4byte	.LFB6
 2143 0034 14000000 		.4byte	.LFE6-.LFB6
 2144 0038 00000000 		.4byte	.LFB7
 2145 003c 08000000 		.4byte	.LFE7-.LFB7
 2146 0040 00000000 		.4byte	.LFB8
 2147 0044 48000000 		.4byte	.LFE8-.LFB8
 2148 0048 00000000 		.4byte	.LFB9
 2149 004c 44000000 		.4byte	.LFE9-.LFB9
 2150 0050 00000000 		.4byte	.LFB10
 2151 0054 1C000000 		.4byte	.LFE10-.LFB10
 2152 0058 00000000 		.4byte	.LFB11
 2153 005c 30000000 		.4byte	.LFE11-.LFB11
 2154 0060 00000000 		.4byte	.LFB12
 2155 0064 2C000000 		.4byte	.LFE12-.LFB12
 2156 0068 00000000 		.4byte	.LFB13
 2157 006c 1C000000 		.4byte	.LFE13-.LFB13
 2158 0070 00000000 		.4byte	.LFB14
 2159 0074 1C000000 		.4byte	.LFE14-.LFB14
 2160 0078 00000000 		.4byte	.LFB15
 2161 007c 30000000 		.4byte	.LFE15-.LFB15
 2162 0080 00000000 		.4byte	.LFB16
 2163 0084 2C000000 		.4byte	.LFE16-.LFB16
 2164 0088 00000000 		.4byte	.LFB17
 2165 008c A4000000 		.4byte	.LFE17-.LFB17
 2166 0090 00000000 		.4byte	.LFB18
 2167 0094 90000000 		.4byte	.LFE18-.LFB18
 2168 0098 00000000 		.4byte	.LFB19
 2169 009c 80000000 		.4byte	.LFE19-.LFB19
 2170 00a0 00000000 		.4byte	0
 2171 00a4 00000000 		.4byte	0
 2172              		.section	.debug_ranges,"",%progbits
 2173              	.Ldebug_ranges0:
 2174 0000 00000000 		.4byte	.LFB2
 2175 0004 24000000 		.4byte	.LFE2
 2176 0008 00000000 		.4byte	.LFB3
 2177 000c D4010000 		.4byte	.LFE3
 2178 0010 00000000 		.4byte	.LFB4
 2179 0014 38000000 		.4byte	.LFE4
 2180 0018 00000000 		.4byte	.LFB5
 2181 001c 18000000 		.4byte	.LFE5
 2182 0020 00000000 		.4byte	.LFB6
 2183 0024 14000000 		.4byte	.LFE6
 2184 0028 00000000 		.4byte	.LFB7
 2185 002c 08000000 		.4byte	.LFE7
 2186 0030 00000000 		.4byte	.LFB8
 2187 0034 48000000 		.4byte	.LFE8
 2188 0038 00000000 		.4byte	.LFB9
 2189 003c 44000000 		.4byte	.LFE9
 2190 0040 00000000 		.4byte	.LFB10
 2191 0044 1C000000 		.4byte	.LFE10
 2192 0048 00000000 		.4byte	.LFB11
 2193 004c 30000000 		.4byte	.LFE11
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 55


 2194 0050 00000000 		.4byte	.LFB12
 2195 0054 2C000000 		.4byte	.LFE12
 2196 0058 00000000 		.4byte	.LFB13
 2197 005c 1C000000 		.4byte	.LFE13
 2198 0060 00000000 		.4byte	.LFB14
 2199 0064 1C000000 		.4byte	.LFE14
 2200 0068 00000000 		.4byte	.LFB15
 2201 006c 30000000 		.4byte	.LFE15
 2202 0070 00000000 		.4byte	.LFB16
 2203 0074 2C000000 		.4byte	.LFE16
 2204 0078 00000000 		.4byte	.LFB17
 2205 007c A4000000 		.4byte	.LFE17
 2206 0080 00000000 		.4byte	.LFB18
 2207 0084 90000000 		.4byte	.LFE18
 2208 0088 00000000 		.4byte	.LFB19
 2209 008c 80000000 		.4byte	.LFE19
 2210 0090 00000000 		.4byte	0
 2211 0094 00000000 		.4byte	0
 2212              		.section	.debug_line,"",%progbits
 2213              	.Ldebug_line0:
 2214 0000 97020000 		.section	.debug_str,"MS",%progbits,1
 2214      02004200 
 2214      00000201 
 2214      FB0E0D00 
 2214      01010101 
 2215              	.LASF6:
 2216 0000 6C6F6E67 		.ascii	"long long int\000"
 2216      206C6F6E 
 2216      6720696E 
 2216      7400
 2217              	.LASF55:
 2218 000e 4144435F 		.ascii	"ADC_channelsConfig\000"
 2218      6368616E 
 2218      6E656C73 
 2218      436F6E66 
 2218      696700
 2219              	.LASF19:
 2220 0021 72656733 		.ascii	"reg32\000"
 2220      3200
 2221              	.LASF59:
 2222 0027 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2222      4320342E 
 2222      392E3320 
 2222      32303135 
 2222      30333033 
 2223 005a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2223      20726576 
 2223      6973696F 
 2223      6E203232 
 2223      31323230 
 2224 008d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2224      66756E63 
 2224      74696F6E 
 2224      2D736563 
 2224      74696F6E 
 2225              	.LASF60:
 2226 00b5 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 56


 2226      6E657261 
 2226      7465645F 
 2226      536F7572 
 2226      63655C50 
 2227              	.LASF45:
 2228 00d4 6F666673 		.ascii	"offset\000"
 2228      657400
 2229              	.LASF15:
 2230 00db 666C6F61 		.ascii	"float\000"
 2230      7400
 2231              	.LASF41:
 2232 00e1 68696768 		.ascii	"highLimit\000"
 2232      4C696D69 
 2232      7400
 2233              	.LASF48:
 2234 00eb 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2234      436F756E 
 2234      7473546F 
 2234      5F6D566F 
 2234      6C747300 
 2235              	.LASF52:
 2236 00ff 75566F6C 		.ascii	"uVolts\000"
 2236      747300
 2237              	.LASF3:
 2238 0106 73686F72 		.ascii	"short unsigned int\000"
 2238      7420756E 
 2238      7369676E 
 2238      65642069 
 2238      6E7400
 2239              	.LASF2:
 2240 0119 73686F72 		.ascii	"short int\000"
 2240      7420696E 
 2240      7400
 2241              	.LASF44:
 2242 0123 4144435F 		.ascii	"ADC_SetOffset\000"
 2242      5365744F 
 2242      66667365 
 2242      7400
 2243              	.LASF38:
 2244 0131 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2244      5365744C 
 2244      6F774C69 
 2244      6D697400 
 2245              	.LASF29:
 2246 0141 73746174 		.ascii	"status\000"
 2246      757300
 2247              	.LASF14:
 2248 0148 666C6F61 		.ascii	"float32\000"
 2248      74333200 
 2249              	.LASF57:
 2250 0150 4144435F 		.ascii	"ADC_offset\000"
 2250      6F666673 
 2250      657400
 2251              	.LASF22:
 2252 015b 746D7052 		.ascii	"tmpRegVal\000"
 2252      65675661 
 2252      6C00
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 57


 2253              	.LASF46:
 2254 0165 4144435F 		.ascii	"ADC_SetGain\000"
 2254      53657447 
 2254      61696E00 
 2255              	.LASF1:
 2256 0171 756E7369 		.ascii	"unsigned char\000"
 2256      676E6564 
 2256      20636861 
 2256      7200
 2257              	.LASF40:
 2258 017f 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2258      53657448 
 2258      6967684C 
 2258      696D6974 
 2258      00
 2259              	.LASF12:
 2260 0190 696E7431 		.ascii	"int16\000"
 2260      3600
 2261              	.LASF5:
 2262 0196 6C6F6E67 		.ascii	"long unsigned int\000"
 2262      20756E73 
 2262      69676E65 
 2262      6420696E 
 2262      7400
 2263              	.LASF13:
 2264 01a8 696E7433 		.ascii	"int32\000"
 2264      3200
 2265              	.LASF31:
 2266 01ae 4144435F 		.ascii	"ADC_GetResult16\000"
 2266      47657452 
 2266      6573756C 
 2266      74313600 
 2267              	.LASF61:
 2268 01be 443A5C47 		.ascii	"D:\\GitHub\\CY_BLE_MOUSE\\BLE_HID_Mouse\\BLE_HID_Mo"
 2268      69744875 
 2268      625C4359 
 2268      5F424C45 
 2268      5F4D4F55 
 2269 01ed 7573652E 		.ascii	"use.cydsn\000"
 2269      63796473 
 2269      6E00
 2270              	.LASF36:
 2271 01f7 4144435F 		.ascii	"ADC_SetChanMask\000"
 2271      53657443 
 2271      68616E4D 
 2271      61736B00 
 2272              	.LASF43:
 2273 0207 4144435F 		.ascii	"ADC_SetSatMask\000"
 2273      53657453 
 2273      61744D61 
 2273      736B00
 2274              	.LASF30:
 2275 0216 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2275      4973456E 
 2275      64436F6E 
 2275      76657273 
 2275      696F6E00 
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 58


 2276              	.LASF16:
 2277 022a 646F7562 		.ascii	"double\000"
 2277      6C6500
 2278              	.LASF39:
 2279 0231 6C6F774C 		.ascii	"lowLimit\000"
 2279      696D6974 
 2279      00
 2280              	.LASF47:
 2281 023a 61646347 		.ascii	"adcGain\000"
 2281      61696E00 
 2282              	.LASF10:
 2283 0242 75696E74 		.ascii	"uint16\000"
 2283      313600
 2284              	.LASF49:
 2285 0249 61646343 		.ascii	"adcCounts\000"
 2285      6F756E74 
 2285      7300
 2286              	.LASF11:
 2287 0253 75696E74 		.ascii	"uint32\000"
 2287      333200
 2288              	.LASF42:
 2289 025a 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2289      5365744C 
 2289      696D6974 
 2289      4D61736B 
 2289      00
 2290              	.LASF8:
 2291 026b 756E7369 		.ascii	"unsigned int\000"
 2291      676E6564 
 2291      20696E74 
 2291      00
 2292              	.LASF25:
 2293 0278 4144435F 		.ascii	"ADC_Enable\000"
 2293      456E6162 
 2293      6C6500
 2294              	.LASF23:
 2295 0283 636F756E 		.ascii	"counts\000"
 2295      747300
 2296              	.LASF7:
 2297 028a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2297      206C6F6E 
 2297      6720756E 
 2297      7369676E 
 2297      65642069 
 2298              	.LASF34:
 2299 02a1 72657375 		.ascii	"result\000"
 2299      6C7400
 2300              	.LASF24:
 2301 02a8 4144435F 		.ascii	"ADC_Start\000"
 2301      53746172 
 2301      7400
 2302              	.LASF35:
 2303 02b2 4144435F 		.ascii	"ADC_Init\000"
 2303      496E6974 
 2303      00
 2304              	.LASF54:
 2305 02bb 766F6C74 		.ascii	"volts\000"
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 59


 2305      7300
 2306              	.LASF33:
 2307 02c1 6368616E 		.ascii	"chan\000"
 2307      00
 2308              	.LASF50:
 2309 02c6 6D566F6C 		.ascii	"mVolts\000"
 2309      747300
 2310              	.LASF20:
 2311 02cd 73697A65 		.ascii	"sizetype\000"
 2311      74797065 
 2311      00
 2312              	.LASF51:
 2313 02d6 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2313      436F756E 
 2313      7473546F 
 2313      5F75566F 
 2313      6C747300 
 2314              	.LASF53:
 2315 02ea 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2315      436F756E 
 2315      7473546F 
 2315      5F566F6C 
 2315      747300
 2316              	.LASF27:
 2317 02fd 4144435F 		.ascii	"ADC_StartConvert\000"
 2317      53746172 
 2317      74436F6E 
 2317      76657274 
 2317      00
 2318              	.LASF37:
 2319 030e 6D61736B 		.ascii	"mask\000"
 2319      00
 2320              	.LASF21:
 2321 0313 63684E75 		.ascii	"chNum\000"
 2321      6D00
 2322              	.LASF32:
 2323 0319 7265744D 		.ascii	"retMode\000"
 2323      6F646500 
 2324              	.LASF28:
 2325 0321 4144435F 		.ascii	"ADC_StopConvert\000"
 2325      53746F70 
 2325      436F6E76 
 2325      65727400 
 2326              	.LASF9:
 2327 0331 75696E74 		.ascii	"uint8\000"
 2327      3800
 2328              	.LASF58:
 2329 0337 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2329      636F756E 
 2329      74735065 
 2329      72313056 
 2329      6F6C7400 
 2330              	.LASF4:
 2331 034b 6C6F6E67 		.ascii	"long int\000"
 2331      20696E74 
 2331      00
 2332              	.LASF18:
ARM GAS  C:\Users\Herry\AppData\Local\Temp\ccNUWNJ7.s 			page 60


 2333 0354 63686172 		.ascii	"char\000"
 2333      00
 2334              	.LASF0:
 2335 0359 7369676E 		.ascii	"signed char\000"
 2335      65642063 
 2335      68617200 
 2336              	.LASF56:
 2337 0365 4144435F 		.ascii	"ADC_initVar\000"
 2337      696E6974 
 2337      56617200 
 2338              	.LASF17:
 2339 0371 696E7436 		.ascii	"int64\000"
 2339      3400
 2340              	.LASF26:
 2341 0377 4144435F 		.ascii	"ADC_Stop\000"
 2341      53746F70 
 2341      00
 2342              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
